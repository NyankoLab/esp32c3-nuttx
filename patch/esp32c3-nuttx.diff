diff --git a/arch/risc-v/Kconfig b/arch/risc-v/Kconfig
index 5a78e4c65a..01094bb145 100644
--- a/arch/risc-v/Kconfig
+++ b/arch/risc-v/Kconfig
@@ -99,9 +99,11 @@ config ARCH_CHIP_ESP32C3_GENERIC
 	select ARCH_RV_ISA_C
 	select ARCH_VECNOTIRQ
 	select ARCH_HAVE_BOOTLOADER if !ESPRESSIF_SIMPLE_BOOT
+	select ARCH_HAVE_ELF_EXECUTABLE
 	select ARCH_HAVE_MPU
 	select ARCH_HAVE_RESET
 	select ARCH_HAVE_RNG
+	select ARCH_HAVE_TEXT_HEAP
 	select ARCH_HAVE_TICKLESS
 	select LIBC_ARCH_ATOMIC
 	select LIBC_ARCH_MEMCPY
diff --git a/arch/risc-v/src/cmake/Toolchain.cmake b/arch/risc-v/src/cmake/Toolchain.cmake
index fb0e9d1db5..9cf90a0cda 100644
--- a/arch/risc-v/src/cmake/Toolchain.cmake
+++ b/arch/risc-v/src/cmake/Toolchain.cmake
@@ -116,11 +116,7 @@ set(CMAKE_ASM_ARCHIVE_CREATE "<CMAKE_AR> rcs <TARGET> <LINK_FLAGS> <OBJECTS>")
 if(CONFIG_DEBUG_CUSTOMOPT)
   add_compile_options(${CONFIG_DEBUG_OPTLEVEL})
 elseif(CONFIG_DEBUG_FULLOPT)
-  if(CONFIG_ARCH_TOOLCHAIN_CLANG)
-    add_compile_options(-Oz)
-  else()
-    add_compile_options(-Os)
-  endif()
+  add_compile_options(-Oz)
 endif()
 
 if(NOT CONFIG_DEBUG_NOOPT)
diff --git a/arch/risc-v/src/common/espressif/Wireless.mk b/arch/risc-v/src/common/espressif/Wireless.mk
index e2e627ca9f..1972afb8f5 100644
--- a/arch/risc-v/src/common/espressif/Wireless.mk
+++ b/arch/risc-v/src/common/espressif/Wireless.mk
@@ -28,7 +28,7 @@ EXTRA_LIBPATHS += -L $(ARCH_SRCDIR)$(DELIM)chip$(DELIM)$(ESP_HAL_3RDPARTY_REPO)$
 EXTRA_LIBPATHS += -L $(ARCH_SRCDIR)$(DELIM)chip$(DELIM)$(ESP_HAL_3RDPARTY_REPO)$(DELIM)components$(DELIM)esp_phy$(DELIM)lib$(DELIM)$(CHIP_SERIES)
 EXTRA_LIBPATHS += -L $(ARCH_SRCDIR)$(DELIM)chip$(DELIM)$(ESP_HAL_3RDPARTY_REPO)$(DELIM)components$(DELIM)esp_wifi$(DELIM)lib$(DELIM)$(CHIP_SERIES)
 
-EXTRA_LIBS += -lphy -lcoexist -lmesh
+EXTRA_LIBS += -lphy -lcoexist
 
 ifeq ($(CONFIG_ESPRESSIF_WIFI),y)
 
@@ -45,6 +45,39 @@ INCLUDES += $(INCDIR_PREFIX)$(ARCH_SRCDIR)$(DELIM)chip$(DELIM)$(ESP_HAL_3RDPARTY
 INCLUDES += $(INCDIR_PREFIX)$(ARCH_SRCDIR)$(DELIM)chip$(DELIM)$(ESP_HAL_3RDPARTY_REPO)$(DELIM)components$(DELIM)mbedtls$(DELIM)port$(DELIM)include
 INCLUDES += $(INCDIR_PREFIX)$(ARCH_SRCDIR)$(DELIM)chip$(DELIM)$(ESP_HAL_3RDPARTY_REPO)$(DELIM)nuttx$(DELIM)include$(DELIM)mbedtls
 
+CHIP_CSRCS += chacha20.c
+CHIP_CSRCS += chachapoly.c
+CHIP_CSRCS += hkdf.c
+CHIP_CSRCS += net_sockets.c
+CHIP_CSRCS += pkcs12.c
+CHIP_CSRCS += poly1305.c
+CHIP_CSRCS += ssl_ciphersuites.c
+CHIP_CSRCS += ssl_client.c
+CHIP_CSRCS += ssl_msg.c
+CHIP_CSRCS += ssl_tls.c
+CHIP_CSRCS += ssl_tls12_client.c
+CHIP_CSRCS += ssl_tls12_server.c
+CHIP_CSRCS += x509.c
+CHIP_CSRCS += x509_crt.c
+CHIP_CSRCS += mbedtls_sslutils.c
+
+VPATH += chip$(DELIM)$(ESP_HAL_3RDPARTY_REPO)$(DELIM)components$(DELIM)hal
+VPATH += chip$(DELIM)$(ESP_HAL_3RDPARTY_REPO)$(DELIM)components$(DELIM)mbedtls$(DELIM)port$(DELIM)aes
+VPATH += chip$(DELIM)$(ESP_HAL_3RDPARTY_REPO)$(DELIM)components$(DELIM)mbedtls$(DELIM)port$(DELIM)aes$(DELIM)block
+VPATH += chip$(DELIM)$(ESP_HAL_3RDPARTY_REPO)$(DELIM)components$(DELIM)mbedtls$(DELIM)port$(DELIM)sha$(DELIM)block
+
+INCLUDES += $(INCDIR_PREFIX)$(ARCH_SRCDIR)$(DELIM)chip$(DELIM)$(ESP_HAL_3RDPARTY_REPO)$(DELIM)components$(DELIM)mbedtls$(DELIM)port$(DELIM)aes$(DELIM)dma$(DELIM)include
+
+CHIP_CSRCS += aes_hal.c
+CHIP_CSRCS += sha_hal.c
+CHIP_CSRCS += esp_aes.c
+CHIP_CSRCS += esp_aes_common.c
+CHIP_CSRCS += esp_aes_gcm.c
+CHIP_CSRCS += esp_aes_xts.c
+CHIP_CSRCS += esp_sha1.c
+CHIP_CSRCS += esp_sha256.c
+CHIP_CSRCS += sha.c
+
 ### Define Espressif's configs for mbedTLS
 
 CFLAGS += $(DEFINE_PREFIX)MBEDTLS_CONFIG_FILE="<mbedtls/esp_config.h>"
diff --git a/arch/risc-v/src/common/espressif/esp_wifi_utils.h b/arch/risc-v/src/common/espressif/esp_wifi_utils.h
index 738fbbed08..17914d9554 100644
--- a/arch/risc-v/src/common/espressif/esp_wifi_utils.h
+++ b/arch/risc-v/src/common/espressif/esp_wifi_utils.h
@@ -45,6 +45,8 @@ extern "C"
  * Public Function Prototypes
  ****************************************************************************/
 
+struct iwreq;
+
 /****************************************************************************
  * Name: esp_wifi_start_scan
  *
diff --git a/arch/risc-v/src/common/riscv_initialize.c b/arch/risc-v/src/common/riscv_initialize.c
index 9d0f1c81d7..6305a4a565 100644
--- a/arch/risc-v/src/common/riscv_initialize.c
+++ b/arch/risc-v/src/common/riscv_initialize.c
@@ -130,3 +130,8 @@ void up_initialize(void)
 
   board_autoled_on(LED_IRQSENABLED);
 }
+
+uint32_t mesh_sta_auth_expire_time(void)
+{
+    return 0;
+}
diff --git a/arch/risc-v/src/esp32c3/Make.defs b/arch/risc-v/src/esp32c3/Make.defs
index 97e5963f4b..e5b1a6e2c1 100644
--- a/arch/risc-v/src/esp32c3/Make.defs
+++ b/arch/risc-v/src/esp32c3/Make.defs
@@ -28,4 +28,8 @@ CHIP_CSRCS += esp_coex_adapter.c esp_wifi_adapter.c
 EXTRA_LIBS += -lcore -lnet80211 -lpp
 endif
 
+ifeq ($(CONFIG_ARCH_USE_TEXT_HEAP),y)
+CHIP_CSRCS += esp32c3_textheap.c
+endif
+
 CFLAGS += ${DEFINE_PREFIX}_RETARGETABLE_LOCKING
diff --git a/arch/risc-v/src/esp32c3/esp_wifi_adapter.c b/arch/risc-v/src/esp32c3/esp_wifi_adapter.c
index ba1080f652..1602dd7e9d 100644
--- a/arch/risc-v/src/esp32c3/esp_wifi_adapter.c
+++ b/arch/risc-v/src/esp32c3/esp_wifi_adapter.c
@@ -5119,7 +5119,7 @@ int esp_wifi_softap_password(struct iwreq *iwr, bool set)
 
       if (ext->alg != IW_ENCODE_ALG_NONE)
         {
-          memcpy(wifi_cfg.sta.password, pdata, len);
+          memcpy(wifi_cfg.ap.password, pdata, len);
         }
 
       if (g_softap_started)
diff --git a/binfmt/libelf/libelf_symbols.c b/binfmt/libelf/libelf_symbols.c
index bbc232cc76..1d9c1fe3a9 100644
--- a/binfmt/libelf/libelf_symbols.c
+++ b/binfmt/libelf/libelf_symbols.c
@@ -304,6 +304,8 @@ int elf_symvalue(FAR struct elf_loadinfo_s *loadinfo, FAR Elf_Sym *sym,
           {
             berr("SHN_UNDEF: Exported symbol \"%s\" not found\n",
                  loadinfo->iobuffer);
+            printf("SHN_UNDEF: Exported symbol \"%s\" not found\n",
+                 loadinfo->iobuffer);
             return -ENOENT;
           }
 
diff --git a/boards/risc-v/esp32c3/common/src/esp_board_spiflash.c b/boards/risc-v/esp32c3/common/src/esp_board_spiflash.c
index 7e1c40ccb7..7ee8150239 100644
--- a/boards/risc-v/esp32c3/common/src/esp_board_spiflash.c
+++ b/boards/risc-v/esp32c3/common/src/esp_board_spiflash.c
@@ -58,18 +58,105 @@
  * Private Types
  ****************************************************************************/
 
+#ifdef CONFIG_ESPRESSIF_HAVE_OTA_PARTITION
+
+struct ota_partition_s
+{
+  uint32_t    offset;          /* Partition offset from the beginning of MTD */
+  uint32_t    size;            /* Partition size in bytes */
+  const char *devpath;         /* Partition device path */
+};
+
+#endif
+
 /****************************************************************************
  * Private Function Prototypes
  ****************************************************************************/
 
+#ifdef CONFIG_ESPRESSIF_HAVE_OTA_PARTITION
+static int init_ota_partitions(void);
+#endif
+
 /****************************************************************************
  * Private Data
  ****************************************************************************/
 
+#ifdef CONFIG_ESPRESSIF_HAVE_OTA_PARTITION
+static const struct ota_partition_s g_ota_partition_table[] =
+{
+  {
+    .offset  = CONFIG_ESPRESSIF_OTA_PRIMARY_SLOT_OFFSET,
+    .size    = CONFIG_ESPRESSIF_OTA_SLOT_SIZE,
+    .devpath = CONFIG_ESPRESSIF_OTA_PRIMARY_SLOT_DEVPATH
+  },
+  {
+    .offset  = CONFIG_ESPRESSIF_OTA_SECONDARY_SLOT_OFFSET,
+    .size    = CONFIG_ESPRESSIF_OTA_SLOT_SIZE,
+    .devpath = CONFIG_ESPRESSIF_OTA_SECONDARY_SLOT_DEVPATH
+  },
+  {
+    .offset  = CONFIG_ESPRESSIF_OTA_SCRATCH_OFFSET,
+    .size    = CONFIG_ESPRESSIF_OTA_SCRATCH_SIZE,
+    .devpath = CONFIG_ESPRESSIF_OTA_SCRATCH_DEVPATH
+  }
+};
+#endif
+
 /****************************************************************************
  * Private Functions
  ****************************************************************************/
 
+/****************************************************************************
+ * Name: init_ota_partitions
+ *
+ * Description:
+ *   Initialize partitions that are dedicated to firmware OTA update.
+ *
+ * Input Parameters:
+ *   None.
+ *
+ * Returned Value:
+ *   Zero on success; a negated errno value on failure.
+ *
+ ****************************************************************************/
+
+#ifdef CONFIG_ESPRESSIF_HAVE_OTA_PARTITION
+static int init_ota_partitions(void)
+{
+  struct mtd_dev_s *mtd;
+#ifdef CONFIG_BCH
+  char blockdev[18];
+#endif
+  int ret = OK;
+
+  for (int i = 0; i < nitems(g_ota_partition_table); ++i)
+    {
+      const struct ota_partition_s *part = &g_ota_partition_table[i];
+      mtd = esp_spiflash_alloc_mtdpart(part->offset, part->size);
+
+      ret = ftl_initialize(i, mtd);
+      if (ret < 0)
+        {
+          ferr("ERROR: Failed to initialize the FTL layer: %d\n", ret);
+          return ret;
+        }
+
+#ifdef CONFIG_BCH
+      snprintf(blockdev, sizeof(blockdev), "/dev/mtdblock%d", i);
+
+      ret = bchdev_register(blockdev, part->devpath, false);
+      if (ret < 0)
+        {
+          ferr("ERROR: bchdev_register %s failed: %d\n", part->devpath, ret);
+          return ret;
+        }
+#endif
+    }
+
+  return ret;
+}
+#endif
+
 /****************************************************************************
  * Name: setup_smartfs
  *
@@ -406,6 +493,14 @@ int board_spiflash_init(void)
 
   esp_spiflash_init();
 
+#ifdef CONFIG_ESPRESSIF_HAVE_OTA_PARTITION
+  ret = init_ota_partitions();
+  if (ret < 0)
+    {
+      return ret;
+    }
+#endif
+
   ret = init_storage_partition();
   if (ret < 0)
     {
diff --git a/boards/risc-v/esp32c3/esp32c3-generic/src/Make.defs b/boards/risc-v/esp32c3/esp32c3-generic/src/Make.defs
index b23cab8ea0..500ed940a5 100644
--- a/boards/risc-v/esp32c3/esp32c3-generic/src/Make.defs
+++ b/boards/risc-v/esp32c3/esp32c3-generic/src/Make.defs
@@ -38,6 +38,10 @@ ifeq ($(CONFIG_ARCH_BUTTONS),y)
   CSRCS += esp32c3_buttons.c
 endif
 
+ifeq ($(CONFIG_ETC_ROMFS),y)
+  RCRAWS = etc/init.d/rcS
+endif
+
 DEPPATH += --dep-path board
 VPATH += :board
 CFLAGS += ${INCDIR_PREFIX}$(TOPDIR)$(DELIM)arch$(DELIM)$(CONFIG_ARCH)$(DELIM)src$(DELIM)board$(DELIM)board
diff --git a/libs/libc/libc.csv b/libs/libc/libc.csv
index 3623e7ff62..04f50a06e6 100644
--- a/libs/libc/libc.csv
+++ b/libs/libc/libc.csv
@@ -212,6 +212,7 @@
 "pthread_condattr_init","pthread.h","!defined(CONFIG_DISABLE_PTHREAD)","int","FAR pthread_condattr_t *"
 "pthread_condattr_setclock","pthread.h","!defined(CONFIG_DISABLE_PTHREAD)","int","FAR pthread_condattr_t *","clockid_t"
 "pthread_create","pthread.h","!defined(CONFIG_DISABLE_PTHREAD)","int","FAR pthread_t *","FAR const pthread_attr_t *","pthread_startroutine_t","pthread_addr_t"
+"pthread_exit","pthread.h","!defined(CONFIG_DISABLE_PTHREAD)","noreturn","pthread_addr_t"
 "pthread_getname_np","pthread.h","!defined(CONFIG_DISABLE_PTHREAD)","int","pthread_t","char *","size_t"
 "pthread_getspecific","pthread.h","!defined(CONFIG_DISABLE_PTHREAD) && CONFIG_TLS_NELEM > 0","FAR void *","pthread_key_t"
 "pthread_key_create","pthread.h","!defined(CONFIG_DISABLE_PTHREAD) && CONFIG_TLS_NELEM > 0","int","FAR pthread_key_t *","FAR void (*) (void *)|FAR void *"
@@ -248,8 +249,13 @@
 "scandir","dirent.h","","int","FAR const char *","FAR struct dirent ***","FAR int (*)(const struct dirent *)|FAR void *","FAR void *"
 "sched_get_priority_max","sched.h","","int","int"
 "sched_get_priority_min","sched.h","","int","int"
+"sem_destroy","semaphore.h","","int","FAR sem_t *"
 "sem_getvalue","semaphore.h","","int","FAR sem_t *","FAR int *"
 "sem_init","semaphore.h","","int","FAR sem_t *","int","unsigned int"
+"sem_post","semaphore.h","","int","FAR sem_t *"
+"sem_timedwait","semaphore.h","","int","FAR sem_t *","FAR const struct timespec *"
+"sem_trywait","semaphore.h","","int","FAR sem_t *"
+"sem_wait","semaphore.h","","int","FAR sem_t *"
 "setlocale","locale.h","defined(CONFIG_LIBC_LOCALE)","FAR char *","int","FAR const char *"
 "setlogmask","syslog.h","","int","int"
 "setpriority","sys/resource.h","","int","int","id_t","int"
diff --git a/libs/libc/machine/risc-v/arch_elf.c b/libs/libc/machine/risc-v/arch_elf.c
index 8e826bddc5..43ee769719 100644
--- a/libs/libc/machine/risc-v/arch_elf.c
+++ b/libs/libc/machine/risc-v/arch_elf.c
@@ -78,6 +78,7 @@ static struct rname_code_s _rname_table[] =
   {"CALL_PLT", R_RISCV_CALL_PLT},
   {"BRANCH", R_RISCV_BRANCH},
   {"JAL", R_RISCV_JAL},
+  {"ALIGN", R_RISCV_ALIGN},
   {"RVC_JUMP", R_RISCV_RVC_JUMP},
   {"RVC_BRANCH", R_RISCV_RVC_BRANCH},
   {"32_PCREL", R_RISCV_32_PCREL},
@@ -104,6 +105,19 @@ static const char *_get_rname(int type)
   return "?????";
 }
 
+/****************************************************************************
+ * Name: _extract_bits
+ *
+ * Description:
+ *   Copied from ELF_riscv.cpp (LLVM)
+ *
+ ****************************************************************************/
+
+static uint32_t _extract_bits(uint32_t num, int low, int size)
+{
+  return (num & (((1 << size) - 1) << low)) >> low;
+}
+
 /****************************************************************************
  * Name: _get_val, set_val, _add_val
  *
@@ -394,7 +408,7 @@ int up_relocateadd(const Elf_Rela *rel, const Elf_Sym *sym,
 
   relotype = ELF_R_TYPE(rel->r_info);
 
-  if (relotype == R_RISCV_RELAX)
+  if (relotype == R_RISCV_RELAX || relotype == R_RISCV_ALIGN)
     {
       /* NOTE: RELAX has no symbol, so just return */
 
@@ -561,12 +575,21 @@ int up_relocateadd(const Elf_Rela *rel, const Elf_Sym *sym,
           uint32_t val = _get_val((uint16_t *)addr) & 0xfe000f80;
 
           /* NOTE: we assume that a compiler adds an immediate value */
+          if (offset != 0 && val == 0)
+            {
+              uint32_t imm12 = _extract_bits(offset, 12, 1) << 31;
+              uint32_t imm10_5 = _extract_bits(offset, 5, 6) << 25;
+              uint32_t imm4_1 = _extract_bits(offset, 1, 4) << 8;
+              uint32_t imm11 = _extract_bits(offset, 11, 1) << 7;
 
-          ASSERT(offset && val);
-
-          binfo("offset for Bx=%ld (0x%lx) (val=0x%08" PRIx32 ") "
-                "already set!\n",
-                offset, offset, val);
+              _add_val((uint16_t *)addr, imm12 | imm10_5 | imm4_1 | imm11);
+            }
+          else
+            {
+              binfo("offset for Bx=%ld (0x%lx) (val=0x%08" PRIx32 ") "
+                    "already set!\n",
+                    offset, offset, val);
+            }
         }
         break;
 
@@ -583,13 +606,22 @@ int up_relocateadd(const Elf_Rela *rel, const Elf_Sym *sym,
           offset = (long)sym->st_value + (long)rel->r_addend - (long)addr;
           uint32_t val = _get_val((uint16_t *)addr) & 0xfffff000;
 
-          ASSERT(offset && val);
-
           /* NOTE: we assume that a compiler adds an immediate value */
+          if (offset != 0 && val == 0)
+            {
+              uint32_t imm20 = _extract_bits(offset, 20, 1) << 31;
+              uint32_t imm10_1 = _extract_bits(offset, 1, 10) << 21;
+              uint32_t imm11 = _extract_bits(offset, 11, 1) << 20;
+              uint32_t imm19_12 = _extract_bits(offset, 12, 8) << 12;
 
-          binfo("offset for JAL=%ld (0x%lx) (val=0x%08" PRIx32 ") "
-                "already set!\n",
-                offset, offset, val);
+              _add_val((uint16_t *)addr, imm20 | imm10_1 | imm11 | imm19_12);
+            }
+          else
+            {
+              binfo("offset for JAL=%ld (0x%lx) (val=0x%08" PRIx32 ") "
+                    "already set!\n",
+                    offset, offset, val);
+            }
         }
         break;
 
@@ -692,8 +724,25 @@ int up_relocateadd(const Elf_Rela *rel, const Elf_Sym *sym,
 
           uint16_t val = (*(uint16_t *)addr) & 0x1ffc;
 
-          binfo("offset for C.J=%ld (0x%lx) (val=0x%04x) already set!\n",
-                offset, offset, val);
+          /* NOTE: we assume that a compiler adds an immediate value */
+          if (offset != 0 && val == 0)
+            {
+              uint16_t imm11 = _extract_bits(offset, 11, 1) << 12;
+              uint16_t imm4 = _extract_bits(offset, 4, 1) << 11;
+              uint16_t imm9_8 = _extract_bits(offset, 8, 2) << 9;
+              uint16_t imm10 = _extract_bits(offset, 10, 1) << 8;
+              uint16_t imm6 = _extract_bits(offset, 6, 1) << 7;
+              uint16_t imm7 = _extract_bits(offset, 7, 1) << 6;
+              uint16_t imm3_1 = _extract_bits(offset, 1, 3) << 3;
+              uint16_t imm5 = _extract_bits(offset, 5, 1) << 2;
+
+              _add_val((uint16_t *)addr, imm11 | imm4 | imm9_8 | imm10 | imm6 | imm7 | imm3_1 | imm5);
+            }
+          else
+            {
+              binfo("offset for C.J=%ld (0x%lx) (val=0x%04x) already set!\n",
+                    offset, offset, val);
+            }
         }
         break;
 
@@ -713,11 +762,21 @@ int up_relocateadd(const Elf_Rela *rel, const Elf_Sym *sym,
           uint16_t val = (*(uint16_t *)addr) & 0x1c7c;
 
           /* NOTE: we assume that a compiler adds an immediate value */
+          if (offset != 0 && val == 0)
+            {
+              uint16_t imm8 = _extract_bits(offset, 8, 1) << 12;
+              uint16_t imm4_3 = _extract_bits(offset, 3, 2) << 10;
+              uint16_t imm7_6 = _extract_bits(offset, 6, 2) << 5;
+              uint16_t imm2_1 = _extract_bits(offset, 1, 2) << 3;
+              uint16_t imm5 = _extract_bits(offset, 5, 1) << 2;
 
-          ASSERT(offset && val);
-
-          binfo("offset for C.Bx=%ld (0x%lx) (val=0x%04x) already set!\n",
-                offset, offset, val);
+              _add_val((uint16_t *)addr, imm8 | imm4_3 | imm7_6 | imm2_1 | imm5);
+            }
+          else
+            {
+              binfo("offset for C.Bx=%ld (0x%lx) (val=0x%04x) already set!\n",
+                    offset, offset, val);
+            }
         }
         break;
       case R_RISCV_32_PCREL:
diff --git a/syscall/syscall.csv b/syscall/syscall.csv
index 6b23fcd604..6f751011b8 100644
--- a/syscall/syscall.csv
+++ b/syscall/syscall.csv
@@ -1,5 +1,6 @@
 "_assert","assert.h","","void","FAR const char *","int","FAR const char *","FAR void *"
 "_exit","unistd.h","","noreturn","int"
+"accept","sys/socket.h","defined(CONFIG_NET)","int","int","FAR struct sockaddr *","FAR socklen_t *"
 "accept4","sys/socket.h","defined(CONFIG_NET)","int","int","FAR struct sockaddr *","FAR socklen_t *","int"
 "adjtime","sys/time.h","defined(CONFIG_CLOCK_TIMEKEEPING)","int","FAR const struct timeval *","FAR struct timeval *"
 "aio_cancel","aio.h","defined(CONFIG_FS_AIO)","int","int","FAR struct aiocb *"
@@ -60,6 +67,7 @@
 "lseek","unistd.h","","off_t","int","off_t","int"
 "lstat","sys/stat.h","","int","FAR const char *","FAR struct stat *"
 "lutimens","sys/stat.h","","int","FAR const char *","const struct timespec [2]|FAR const struct timespec *"
+"mallinfo","malloc.h","","struct mallinfo","void"
 "mkdir","sys/stat.h","!defined(CONFIG_DISABLE_MOUNTPOINT)","int","FAR const char *","mode_t"
 "mmap","sys/mman.h","","FAR void *","FAR void *","size_t","int","int","int","off_t"
 "modhandle","nuttx/module.h","defined(CONFIG_MODULE)","FAR void *","FAR const char *"
@@ -180,6 +188,7 @@
 "symlink","unistd.h","defined(CONFIG_PSEUDOFS_SOFTLINKS)","int","FAR const char *","FAR const char *"
 "sync","unistd.h","","void"
 "sysinfo","sys/sysinfo.h","","int","FAR struct sysinfo *"
+"system","stdlib.h","","int","FAR const char *"
 "task_create","sched.h","!defined(CONFIG_BUILD_KERNEL)", "int","FAR const char *","int","int","main_t","FAR char * const []|FAR char * const *"
 "task_delete","sched.h","!defined(CONFIG_BUILD_KERNEL)","int","pid_t"
 "task_restart","sched.h","!defined(CONFIG_BUILD_KERNEL)","int","pid_t"
@@ -199,7 +208,548 @@
 "unsetenv","stdlib.h","!defined(CONFIG_DISABLE_ENVIRON)","int","FAR const char *"
 "up_fork","nuttx/arch.h","defined(CONFIG_ARCH_HAVE_FORK)","pid_t"
 "utimens","sys/stat.h","","int","FAR const char *","const struct timespec [2]|FAR const struct timespec *"
+"uname","sys/utsname.h","","int","FAR struct utsname *"
 "wait","sys/wait.h","defined(CONFIG_SCHED_WAITPID) && defined(CONFIG_SCHED_HAVE_PARENT)","pid_t","FAR int *"
 "waitid","sys/wait.h","defined(CONFIG_SCHED_WAITPID) && defined(CONFIG_SCHED_HAVE_PARENT)","int","idtype_t","id_t"," FAR siginfo_t *","int"
 "waitpid","sys/wait.h","defined(CONFIG_SCHED_WAITPID)","pid_t","pid_t","FAR int *","int"
 "write","unistd.h","","ssize_t","int","FAR const void *","size_t"
+"dhcpc_open","../../apps/include/netutils/dhcpc.h","","FAR void *","FAR const char *, FAR const void *, int"
+"dhcpc_request","../../apps/include/netutils/dhcpc.h","","int","FAR void *, FAR struct dhcpc_state *"
+"dhcpc_request_async","../../apps/include/netutils/dhcpc.h","","int","FAR void *, dhcpc_callback_t"
+"dhcpc_cancel","../../apps/include/netutils/dhcpc.h","","void","FAR void *"
+"dhcpc_close","../../apps/include/netutils/dhcpc.h","","void","FAR void *"
+"dhcpd_run","../../apps/include/netutils/dhcpd.h","","int","FAR const char *"
+"dhcpd_start","../../apps/include/netutils/dhcpd.h","","int","FAR const char *"
+"dhcpd_stop","../../apps/include/netutils/dhcpd.h","","int","void"
+"dhcpd_set_startip","../../apps/include/netutils/dhcpd.h","","int","in_addr_t"
+"dhcpd_set_routerip","../../apps/include/netutils/dhcpd.h","","int","in_addr_t"
+"dhcpd_set_netmask","../../apps/include/netutils/dhcpd.h","","int","in_addr_t"
+"dhcpd_set_dnsip","../../apps/include/netutils/dhcpd.h","","int","in_addr_t"
+"httpd_open","../../apps/netutils/webserver/httpd.h","","int","const char *","struct httpd_fs_file *"
+"httpd_openindex","../../apps/netutils/webserver/httpd.h","","int","struct httpd_state *"
+"httpd_close","../../apps/netutils/webserver/httpd.h","","int","struct httpd_fs_file *"
+"httpd_senderror","../../apps/netutils/webserver/httpd.h","","int","struct httpd_state *","int"
+"httpd_sendfile","../../apps/netutils/webserver/httpd.h","","int","struct httpd_state *"
+"httpd_parse","../../apps/netutils/webserver/httpd.h","","int","struct httpd_state *"
+"httpd_send_datachunk","../../apps/netutils/webserver/httpd.h","","int","int","void *","int","bool"
+"httpd_send_headers","../../apps/netutils/webserver/httpd.h","","int","struct httpd_state *","int","int"
+"mdnsd_start","../../apps/include/netutils/mdnsd.h","defined(CONFIG_NETUTILS_MDNS_RESPONDER_SUPPORT)","int","const char *, const char *"
+"mdnsd_stop","../../apps/include/netutils/mdnsd.h","defined(CONFIG_NETUTILS_MDNS_RESPONDER_SUPPORT)","int","void"
+"mdnsd_get_hostname","../../apps/include/netutils/mdnsd.h","defined(CONFIG_NETUTILS_MDNS_RESPONDER_SUPPORT)","int","char *"
+"mdnsd_register_service","../../apps/include/netutils/mdnsd.h","defined(CONFIG_NETUTILS_MDNS_RESPONDER_SUPPORT)","int","const char *, const char *, uint16_t, const char *, const char *[]"
+"mdnsd_resolve_hostname","../../apps/include/netutils/mdnsd.h","","int","char *, int *"
+"mdnsd_discover_service","../../apps/include/netutils/mdnsd.h","","int","char *, int, struct mdns_service_info **, int *"
+"mqtt_sync","../../apps/netutils/mqttc/MQTT-C/include/mqtt.h","","enum MQTTErrors","struct mqtt_client *"
+"mqtt_init","../../apps/netutils/mqttc/MQTT-C/include/mqtt.h","","enum MQTTErrors","struct mqtt_client *","mqtt_pal_socket_handle","uint8_t *","size_t","uint8_t *","size_t","void (*)(void **, struct mqtt_response_publish *)"
+"mqtt_init_reconnect","../../apps/netutils/mqttc/MQTT-C/include/mqtt.h","","void","struct mqtt_client *","void (*)(struct mqtt_client *, void **)","void *","void (*)(void **, struct mqtt_response_publish *)"
+"mqtt_reinit","../../apps/netutils/mqttc/MQTT-C/include/mqtt.h","","void","struct mqtt_client *, mqtt_pal_socket_handle, uint8_t *, size_t, uint8_t *, size_t"
+"mqtt_connect","../../apps/netutils/mqttc/MQTT-C/include/mqtt.h","","enum MQTTErrors","struct mqtt_client *","const char *","const char *","const void *","size_t","const char*","const char*","uint8_t","uint16_t"
+"mqtt_publish","../../apps/netutils/mqttc/MQTT-C/include/mqtt.h","","enum MQTTErrors","struct mqtt_client *","const char *","const void *","size_t","uint8_t"
+"mqtt_subscribe","../../apps/netutils/mqttc/MQTT-C/include/mqtt.h","","enum MQTTErrors","struct mqtt_client *","const char *","int"
+"mqtt_unsubscribe","../../apps/netutils/mqttc/MQTT-C/include/mqtt.h","","enum MQTTErrors","struct mqtt_client *","const char *"
+"mqtt_disconnect","../../apps/netutils/mqttc/MQTT-C/include/mqtt.h","","enum MQTTErrors","struct mqtt_client *"
+"mqtt_reconnect","../../apps/netutils/mqttc/MQTT-C/include/mqtt.h","","enum MQTTErrors","struct mqtt_client *"
+"netlib_setmacaddr","../../apps/include/netutils/netlib.h","","int","FAR const char *","FAR const uint8_t *"
+"netlib_getmacaddr","../../apps/include/netutils/netlib.h","","int","FAR const char *","FAR uint8_t *"
+"sslutil_webclient_tlsops","../arch/risc-v/src/common/espressif/sslutil.h","","struct webclient_tls_ops *","void"
+"wapi_get_ifup","../../apps/include/wireless/wapi.h","","int","int","FAR const char *","FAR int *"
+"wapi_set_ifup","../../apps/include/wireless/wapi.h","","int","int","FAR const char *"
+"wapi_set_ifdown","../../apps/include/wireless/wapi.h","","int","int","FAR const char *"
+"wapi_get_ip","../../apps/include/wireless/wapi.h","","int","int","FAR const char *","struct in_addr *"
+"wapi_set_ip","../../apps/include/wireless/wapi.h","","int","int","FAR const char *","FAR const struct in_addr *"
+"wapi_get_netmask","../../apps/include/wireless/wapi.h","","int","int","FAR const char *","FAR struct in_addr *"
+"wapi_set_netmask","../../apps/include/wireless/wapi.h","","int","int","FAR const char *","FAR const struct in_addr *"
+"wapi_get_essid","../../apps/include/wireless/wapi.h","","int","int","FAR const char *","FAR char *","FAR enum wapi_essid_flag_e *"
+"wapi_set_essid","../../apps/include/wireless/wapi.h","","int","int","FAR const char *","FAR const char *","enum wapi_essid_flag_e"
+"wapi_get_mode","../../apps/include/wireless/wapi.h","","int","int","FAR const char *","FAR enum wapi_mode_e *"
+"wapi_set_mode","../../apps/include/wireless/wapi.h","","int","int","FAR const char *","enum wapi_mode_e"
+"wapi_get_ap","../../apps/include/wireless/wapi.h","","int","int","FAR const char *","FAR struct ether_addr *"
+"wapi_set_ap","../../apps/include/wireless/wapi.h","","int","int","FAR const char *","FAR const struct ether_addr *"
+"wapi_make_socket","../../apps/include/wireless/wapi.h","","int","void"
+"wapi_get_sensitivity","../../apps/include/wireless/wapi.h","","int","int","FAR const char *","FAR int *"
+"wapi_load_config","../../apps/include/wireless/wapi.h","","FAR void *","FAR const char *","FAR const char *","FAR struct wpa_wconfig_s *"
+"wapi_unload_config","../../apps/include/wireless/wapi.h","","void","FAR void *"
+"wapi_save_config","../../apps/include/wireless/wapi.h","","int","FAR const char *","FAR const char *","FAR const struct wpa_wconfig_s *"
+"wpa_driver_wext_set_key_ext","../../apps/include/wireless/wapi.h","","int","int","FAR const char *","enum wpa_alg_e","FAR const char *","size_t"
+"wpa_driver_wext_get_key_ext","../../apps/include/wireless/wapi.h","","int","int","FAR const char *","enum wpa_alg_e *","FAR char *","size_t *"
+"wpa_driver_wext_set_auth_param","../../apps/include/wireless/wapi.h","","int","int","FAR const char *","int","uint32_t"
+"wpa_driver_wext_get_auth_param","../../apps/include/wireless/wapi.h","","int","int","FAR const char *","int","uint32_t *"
+"wpa_driver_wext_associate","../../apps/include/wireless/wapi.h","","int","FAR struct wpa_wconfig_s *"
+"webclient_set_defaults","../../apps/include/netutils/webclient.h","","void","FAR struct webclient_context *"
+"webclient_perform","../../apps/include/netutils/webclient.h","","int","FAR struct webclient_context *"
+"webclient_abort","../../apps/include/netutils/webclient.h","","void","FAR struct webclient_context *"
+"kHAPAccessoryServerTransport_IP","../../apps/netutils/homekit/HomeKitADK/HAP/HAP.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPIPAccessoryServerTransport"
+"kHAPCharacteristicType_AdministratorOnlyAccess","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_AudioFeedback","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_Brightness","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_CoolingThresholdTemperature","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_CurrentDoorState","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_CurrentHeatingCoolingState","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_CurrentRelativeHumidity","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_CurrentTemperature","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_HeatingThresholdTemperature","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_Hue","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_Identify","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_LockControlPoint","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_LockManagementAutoSecurityTimeout","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_LockLastKnownAction","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_LockCurrentState","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_LockTargetState","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_Logs","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_Manufacturer","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_Model","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_MotionDetected","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_Name","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_ObstructionDetected","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_On","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_OutletInUse","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_RotationDirection","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_RotationSpeed","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_Saturation","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_SerialNumber","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_TargetDoorState","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_TargetHeatingCoolingState","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_TargetRelativeHumidity","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_TargetTemperature","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_TemperatureDisplayUnits","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_Version","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_PairSetup","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_PairVerify","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_PairingFeatures","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_PairingPairings","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_FirmwareRevision","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_HardwareRevision","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_AirParticulateDensity","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_AirParticulateSize","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_SecuritySystemCurrentState","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_SecuritySystemTargetState","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_BatteryLevel","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_CarbonMonoxideDetected","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_ContactSensorState","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_CurrentAmbientLightLevel","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_CurrentHorizontalTiltAngle","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_CurrentPosition","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_CurrentVerticalTiltAngle","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_HoldPosition","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_LeakDetected","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_OccupancyDetected","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_PositionState","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_ProgrammableSwitchEvent","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_StatusActive","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_SmokeDetected","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_StatusFault","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_StatusJammed","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_StatusLowBattery","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_StatusTampered","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_TargetHorizontalTiltAngle","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_TargetPosition","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_TargetVerticalTiltAngle","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_SecuritySystemAlarmType","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_ChargingState","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_CarbonMonoxideLevel","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_CarbonMonoxidePeakLevel","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_CarbonDioxideDetected","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_CarbonDioxideLevel","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_CarbonDioxidePeakLevel","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_AirQuality","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_ServiceSignature","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_AccessoryFlags","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_LockPhysicalControls","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_TargetAirPurifierState","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_CurrentAirPurifierState","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_CurrentSlatState","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_FilterLifeLevel","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_FilterChangeIndication","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_ResetFilterIndication","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_CurrentFanState","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_Active","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_CurrentHeaterCoolerState","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_TargetHeaterCoolerState","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_CurrentHumidifierDehumidifierState","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_TargetHumidifierDehumidifierState","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_WaterLevel","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_SwingMode","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_TargetFanState","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_SlatType","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_CurrentTiltAngle","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_TargetTiltAngle","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_OzoneDensity","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_NitrogenDioxideDensity","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_SulphurDioxideDensity","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_PM2_5Density","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_PM10Density","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_VOCDensity","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_RelativeHumidityDehumidifierThreshold","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_RelativeHumidityHumidifierThreshold","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_ServiceLabelIndex","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_ServiceLabelNamespace","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_ColorTemperature","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_ProgramMode","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_InUse","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_SetDuration","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_RemainingDuration","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_ValveType","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_IsConfigured","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_ActiveIdentifier","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPCharacteristicType_ADKVersion","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPServiceType_AccessoryInformation","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPServiceType_GarageDoorOpener","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPServiceType_LightBulb","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPServiceType_LockManagement","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPServiceType_LockMechanism","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPServiceType_Outlet","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPServiceType_Switch","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPServiceType_Thermostat","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPServiceType_Pairing","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPServiceType_SecuritySystem","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPServiceType_CarbonMonoxideSensor","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPServiceType_ContactSensor","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPServiceType_Door","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPServiceType_HumiditySensor","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPServiceType_LeakSensor","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPServiceType_LightSensor","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPServiceType_MotionSensor","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPServiceType_OccupancySensor","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPServiceType_SmokeSensor","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPServiceType_StatelessProgrammableSwitch","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPServiceType_TemperatureSensor","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPServiceType_Window","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPServiceType_WindowCovering","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPServiceType_AirQualitySensor","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPServiceType_BatteryService","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPServiceType_CarbonDioxideSensor","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPServiceType_HAPProtocolInformation","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPServiceType_Fan","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPServiceType_Slat","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPServiceType_FilterMaintenance","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPServiceType_AirPurifier","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPServiceType_HeaterCooler","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPServiceType_HumidifierDehumidifier","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPServiceType_ServiceLabel","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPServiceType_IrrigationSystem","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPServiceType_Valve","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPServiceType_Faucet","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPServiceType_CameraRTPStreamManagement","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPServiceType_Microphone","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"kHAPServiceType_Speaker","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristicTypes.h","defined(CONFIG_NETUTILS_HOMEKIT)","const HAPUUID"
+"HAPGetCompatibilityVersion","../../apps/netutils/homekit/HomeKitADK/HAP/HAP.h","defined(CONFIG_NETUTILS_HOMEKIT)","uint32_t","void"
+"HAPGetIdentification","../../apps/netutils/homekit/HomeKitADK/HAP/HAP.h","defined(CONFIG_NETUTILS_HOMEKIT)","const char *","void"
+"HAPGetVersion","../../apps/netutils/homekit/HomeKitADK/HAP/HAP.h","defined(CONFIG_NETUTILS_HOMEKIT)","const char *","void"
+"HAPGetBuild","../../apps/netutils/homekit/HomeKitADK/HAP/HAP.h","defined(CONFIG_NETUTILS_HOMEKIT)","const char *","void"
+"HAPUUIDAreEqual","../../apps/netutils/homekit/HomeKitADK/HAP/HAP.h","defined(CONFIG_NETUTILS_HOMEKIT)","bool","const HAPUUID *, const HAPUUID *"
+"HAPTLVReaderCreate","../../apps/netutils/homekit/HomeKitADK/HAP/HAP.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPTLVReaderRef *, void *, size_t"
+"HAPTLVReaderGetNext","../../apps/netutils/homekit/HomeKitADK/HAP/HAP.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPTLVReaderRef *, bool *, HAPTLV *"
+"HAPTLVReaderGetAll","../../apps/netutils/homekit/HomeKitADK/HAP/HAP.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPTLVReaderRef *, HAPTLV *const *"
+"HAPTLVWriterCreate","../../apps/netutils/homekit/HomeKitADK/HAP/HAP.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPTLVWriterRef *, void *, size_t "
+"HAPTLVWriterAppend","../../apps/netutils/homekit/HomeKitADK/HAP/HAP.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPTLVWriterRef *, const HAPTLV *"
+"HAPTLVWriterGetBuffer","../../apps/netutils/homekit/HomeKitADK/HAP/HAP.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","const HAPTLVWriterRef *, void **, size_t *"
+"HAPTLVWriterGetScratchBytes","../../apps/netutils/homekit/HomeKitADK/HAP/HAP.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","const HAPTLVWriterRef *, void **, size_t *"
+"HAPAccessoryServerCreate","../../apps/netutils/homekit/HomeKitADK/HAP/HAP.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *, const HAPAccessoryServerOptions *, const HAPPlatform *, const HAPAccessoryServerCallbacks *, void *"
+"HAPAccessoryServerRelease","../../apps/netutils/homekit/HomeKitADK/HAP/HAP.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *"
+"HAPAccessoryServerGetState","../../apps/netutils/homekit/HomeKitADK/HAP/HAP.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPAccessoryServerState","HAPAccessoryServerRef *"
+"HAPAccessoryServerIsPaired","../../apps/netutils/homekit/HomeKitADK/HAP/HAP.h","defined(CONFIG_NETUTILS_HOMEKIT)","bool","HAPAccessoryServerRef *"
+"HAPAccessoryServerStart","../../apps/netutils/homekit/HomeKitADK/HAP/HAP.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *, const HAPAccessory *"
+"HAPAccessoryServerStartBridge","../../apps/netutils/homekit/HomeKitADK/HAP/HAP.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *, const HAPAccessory *, const HAPAccessory * const *, bool"
+"HAPAccessoryServerStop","../../apps/netutils/homekit/HomeKitADK/HAP/HAP.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *"
+"HAPAccessoryServerRefreshSetupPayload","../../apps/netutils/homekit/HomeKitADK/HAP/HAP.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *"
+"HAPAccessoryServerEnterNFCPairingMode","../../apps/netutils/homekit/HomeKitADK/HAP/HAP.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *"
+"HAPAccessoryServerExitNFCPairingMode","../../apps/netutils/homekit/HomeKitADK/HAP/HAP.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *"
+"HAPAccessoryServerRaiseEvent","../../apps/netutils/homekit/HomeKitADK/HAP/HAP.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *, const HAPCharacteristic *, const HAPService *, const HAPAccessory *"
+"HAPAccessoryServerRaiseEventOnSession","../../apps/netutils/homekit/HomeKitADK/HAP/HAP.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *, const HAPCharacteristic *, const HAPService *, const HAPAccessory *, HAPSessionRef *"
+"HAPRestoreFactorySettings","../../apps/netutils/homekit/HomeKitADK/HAP/HAP.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPPlatformKeyValueStoreRef"
+"HAPRemoveAllPairings","../../apps/netutils/homekit/HomeKitADK/HAP/HAP.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPPlatformKeyValueStoreRef"
+"HAPLegacyImportDeviceID","../../apps/netutils/homekit/HomeKitADK/HAP/HAP.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPPlatformKeyValueStoreRef, const HAPAccessoryServerDeviceID *"
+"HAPLegacyImportConfigurationNumber","../../apps/netutils/homekit/HomeKitADK/HAP/HAP.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPPlatformKeyValueStoreRef, uint32_t"
+"HAPLegacyImportLongTermSecretKey","../../apps/netutils/homekit/HomeKitADK/HAP/HAP.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPPlatformKeyValueStoreRef, const HAPAccessoryServerLongTermSecretKey *"
+"HAPLegacyImportUnsuccessfulAuthenticationAttemptsCounter","../../apps/netutils/homekit/HomeKitADK/HAP/HAP.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPPlatformKeyValueStoreRef, uint8_t"
+"HAPLegacyImportControllerPairing","../../apps/netutils/homekit/HomeKitADK/HAP/HAP.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPPlatformKeyValueStoreRef, HAPPlatformKeyValueStoreKey, const HAPControllerPairingIdentifier *, const HAPControllerPublicKey *, bool"
+"HAPAccessoryGetInfoResponse","../../apps/netutils/homekit/HomeKitADK/HAP/HAPAccessory+Info.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, HAPSessionRef *, const HAPAccessory *, HAPTLVWriterRef *"
+"HAPAccessoryServerGetClientContext","../../apps/netutils/homekit/HomeKitADK/HAP/HAPAccessoryServer+Internal.h","defined(CONFIG_NETUTILS_HOMEKIT)","void *","HAPAccessoryServerRef *"
+"HAPAccessoryServerDelegateScheduleHandleUpdatedState","../../apps/netutils/homekit/HomeKitADK/HAP/HAPAccessoryServer+Internal.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *"
+"HAPAccessoryServerLoadLTSK","../../apps/netutils/homekit/HomeKitADK/HAP/HAPAccessoryServer+Internal.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPPlatformKeyValueStoreRef, HAPAccessoryServerLongTermSecretKey *"
+"HAPAccessoryServerSupportsMFiHWAuth","../../apps/netutils/homekit/HomeKitADK/HAP/HAPAccessoryServer+Internal.h","defined(CONFIG_NETUTILS_HOMEKIT)","bool","HAPAccessoryServerRef *"
+"HAPAccessoryServerGetPairingFeatureFlags","../../apps/netutils/homekit/HomeKitADK/HAP/HAPAccessoryServer+Internal.h","defined(CONFIG_NETUTILS_HOMEKIT)","uint8_t","HAPAccessoryServerRef *"
+"HAPAccessoryServerGetStatusFlags","../../apps/netutils/homekit/HomeKitADK/HAP/HAPAccessoryServer+Internal.h","defined(CONFIG_NETUTILS_HOMEKIT)","uint8_t","HAPAccessoryServerRef *"
+"HAPAccessoryServerUpdateAdvertisingData","../../apps/netutils/homekit/HomeKitADK/HAP/HAPAccessoryServer+Internal.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *"
+"HAPAccessoryServerCleanupPairings","../../apps/netutils/homekit/HomeKitADK/HAP/HAPAccessoryServer+Internal.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *"
+"HAPAccessoryServerGetCN","../../apps/netutils/homekit/HomeKitADK/HAP/HAPAccessoryServer+Internal.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPPlatformKeyValueStoreRef, uint16_t *"
+"HAPAccessoryServerIncrementCN","../../apps/netutils/homekit/HomeKitADK/HAP/HAPAccessoryServer+Internal.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPPlatformKeyValueStoreRef"
+"HAPHandleFirmwareUpdate","../../apps/netutils/homekit/HomeKitADK/HAP/HAPAccessoryServer+Internal.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *"
+"HAPAccessoryServerHandleSubscribe","../../apps/netutils/homekit/HomeKitADK/HAP/HAPAccessoryServer+Internal.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *, HAPSessionRef *, const HAPCharacteristic *, const HAPService *, const HAPAccessory *"
+"HAPAccessoryServerHandleUnsubscribe","../../apps/netutils/homekit/HomeKitADK/HAP/HAPAccessoryServer+Internal.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *, HAPSessionRef *, const HAPCharacteristic *, const HAPService *, const HAPAccessory *"
+"HAPAccessoryServerSupportsService","../../apps/netutils/homekit/HomeKitADK/HAP/HAPAccessoryServer+Internal.h","defined(CONFIG_NETUTILS_HOMEKIT)","bool","HAPAccessoryServerRef *, HAPTransportType, const HAPService *"
+"HAPAccessoryServerGetNumServiceInstances","../../apps/netutils/homekit/HomeKitADK/HAP/HAPAccessoryServer+Internal.h","defined(CONFIG_NETUTILS_HOMEKIT)","size_t","HAPAccessoryServerRef *, const HAPUUID *"
+"HAPAccessoryServerGetServiceTypeIndex","../../apps/netutils/homekit/HomeKitADK/HAP/HAPAccessoryServer+Internal.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPServiceTypeIndex","HAPAccessoryServerRef *, const HAPService *, const HAPAccessory *"
+"HAPAccessoryServerGetServiceFromServiceTypeIndex","../../apps/netutils/homekit/HomeKitADK/HAP/HAPAccessoryServer+Internal.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *, const HAPUUID *, HAPServiceTypeIndex, const HAPService **, const HAPAccessory **"
+"HAPAccessoryServerEnumerateConnectedSessions","../../apps/netutils/homekit/HomeKitADK/HAP/HAPAccessoryServer+Internal.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *, HAPAccessoryServerEnumerateSessionsCallback, void * context"
+"HAPAccessoryServerGetIPSessionIndex","../../apps/netutils/homekit/HomeKitADK/HAP/HAPAccessoryServer+Internal.h","defined(CONFIG_NETUTILS_HOMEKIT)","size_t","const HAPAccessoryServerRef *, const HAPSessionRef *"
+"HAPAccessorySetupIsValidSetupCode","../../apps/netutils/homekit/HomeKitADK/HAP/HAPAccessorySetup.h","defined(CONFIG_NETUTILS_HOMEKIT)","bool","const char *"
+"HAPAccessorySetupGenerateRandomSetupCode","../../apps/netutils/homekit/HomeKitADK/HAP/HAPAccessorySetup.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPSetupCode *"
+"HAPAccessorySetupIsValidSetupID","../../apps/netutils/homekit/HomeKitADK/HAP/HAPAccessorySetup.h","defined(CONFIG_NETUTILS_HOMEKIT)","bool","const char *"
+"HAPAccessorySetupGenerateRandomSetupID","../../apps/netutils/homekit/HomeKitADK/HAP/HAPAccessorySetup.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPSetupID *"
+"HAPAccessorySetupGetSetupPayload","../../apps/netutils/homekit/HomeKitADK/HAP/HAPAccessorySetup.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPSetupPayload *, const HAPSetupCode *, const HAPSetupID *, HAPAccessorySetupSetupPayloadFlags, HAPAccessoryCategory"
+"HAPAccessorySetupGetSetupHash","../../apps/netutils/homekit/HomeKitADK/HAP/HAPAccessorySetup.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessorySetupSetupHash *, const HAPSetupID *, const HAPDeviceIDString *"
+"HAPAccessorySetupInfoGetSetupInfo","../../apps/netutils/homekit/HomeKitADK/HAP/HAPAccessorySetupInfo.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPSetupInfo *","HAPAccessoryServerRef *, bool"
+"HAPAccessorySetupInfoHandleAccessoryServerStart","../../apps/netutils/homekit/HomeKitADK/HAP/HAPAccessorySetupInfo.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *"
+"HAPAccessorySetupInfoHandleAccessoryServerStop","../../apps/netutils/homekit/HomeKitADK/HAP/HAPAccessorySetupInfo.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *"
+"HAPAccessorySetupInfoHandleAccessoryServerStateUpdate","../../apps/netutils/homekit/HomeKitADK/HAP/HAPAccessorySetupInfo.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *"
+"HAPAccessorySetupInfoHandlePairingStart","../../apps/netutils/homekit/HomeKitADK/HAP/HAPAccessorySetupInfo.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *"
+"HAPAccessorySetupInfoHandlePairingStop","../../apps/netutils/homekit/HomeKitADK/HAP/HAPAccessorySetupInfo.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *, bool"
+"HAPAccessorySetupInfoRefreshSetupPayload","../../apps/netutils/homekit/HomeKitADK/HAP/HAPAccessorySetupInfo.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *"
+"HAPAccessorySetupInfoEnterNFCPairingMode","../../apps/netutils/homekit/HomeKitADK/HAP/HAPAccessorySetupInfo.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *"
+"HAPAccessorySetupInfoExitNFCPairingMode","../../apps/netutils/homekit/HomeKitADK/HAP/HAPAccessorySetupInfo.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *"
+"HAPAccessorySetupInfoEnterLegacyPairingMode","../../apps/netutils/homekit/HomeKitADK/HAP/HAPAccessorySetupInfo.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *"
+"HAPRegularAccessoryIsValid","../../apps/netutils/homekit/HomeKitADK/HAP/HAPAccessoryValidation.h","defined(CONFIG_NETUTILS_HOMEKIT)","bool","HAPAccessoryServerRef *, const HAPAccessory *"
+"HAPBridgedAccessoryIsValid","../../apps/netutils/homekit/HomeKitADK/HAP/HAPAccessoryValidation.h","defined(CONFIG_NETUTILS_HOMEKIT)","bool","const HAPAccessory *"
+"HAPBitSetContainsInternal","../../apps/netutils/homekit/HomeKitADK/HAP/HAPBitSet.h","defined(CONFIG_NETUTILS_HOMEKIT)","bool","const uint8_t *, size_t, uint8_t"
+"HAPBitSetInsertInternal","../../apps/netutils/homekit/HomeKitADK/HAP/HAPBitSet.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","uint8_t *, size_t, uint8_t"
+"HAPBitSetRemoveInternal","../../apps/netutils/homekit/HomeKitADK/HAP/HAPBitSet.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","uint8_t *, size_t, uint8_t"
+"HAPCharacteristicReadRequiresAdminPermissions","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","bool","const HAPCharacteristic *"
+"HAPCharacteristicWriteRequiresAdminPermissions","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","bool","const HAPCharacteristic *"
+"HAPDataCharacteristicHandleRead","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPDataCharacteristicReadRequest *, void *, size_t, size_t *, void *"
+"HAPDataCharacteristicHandleWrite","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPDataCharacteristicWriteRequest *, const void *, size_t, void *"
+"HAPDataCharacteristicHandleSubscribe","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *, const HAPDataCharacteristicSubscriptionRequest *, void *"
+"HAPDataCharacteristicHandleUnsubscribe","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *, const HAPDataCharacteristicSubscriptionRequest *, void *"
+"HAPBoolCharacteristicHandleRead","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPBoolCharacteristicReadRequest *, bool *value, void *"
+"HAPBoolCharacteristicHandleWrite","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPBoolCharacteristicWriteRequest *, bool value, void *"
+"HAPBoolCharacteristicHandleSubscribe","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *, const HAPBoolCharacteristicSubscriptionRequest *, void *"
+"HAPBoolCharacteristicHandleUnsubscribe","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *, const HAPBoolCharacteristicSubscriptionRequest *, void *"
+"HAPUInt8CharacteristicHandleRead","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPUInt8CharacteristicReadRequest *, uint8_t *value, void *"
+"HAPUInt8CharacteristicHandleWrite","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPUInt8CharacteristicWriteRequest *, uint8_t value, void *"
+"HAPUInt8CharacteristicHandleSubscribe","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *, const HAPUInt8CharacteristicSubscriptionRequest *, void *"
+"HAPUInt8CharacteristicHandleUnsubscribe","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *, const HAPUInt8CharacteristicSubscriptionRequest *, void *"
+"HAPUInt16CharacteristicHandleRead","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPUInt16CharacteristicReadRequest *, uint16_t *value, void *"
+"HAPUInt16CharacteristicHandleWrite","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPUInt16CharacteristicWriteRequest *, uint16_t value, void *"
+"HAPUInt16CharacteristicHandleSubscribe","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *, const HAPUInt16CharacteristicSubscriptionRequest *, void *"
+"HAPUInt16CharacteristicHandleUnsubscribe","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *, const HAPUInt16CharacteristicSubscriptionRequest *, void *"
+"HAPUInt32CharacteristicHandleRead","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPUInt32CharacteristicReadRequest *, uint32_t *value, void *"
+"HAPUInt32CharacteristicHandleWrite","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPUInt32CharacteristicWriteRequest *, uint32_t value, void *"
+"HAPUInt32CharacteristicHandleSubscribe","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *, const HAPUInt32CharacteristicSubscriptionRequest *, void *"
+"HAPUInt32CharacteristicHandleUnsubscribe","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *, const HAPUInt32CharacteristicSubscriptionRequest *, void *"
+"HAPUInt64CharacteristicHandleRead","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPUInt64CharacteristicReadRequest *, uint64_t *value, void *"
+"HAPUInt64CharacteristicHandleWrite","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPUInt64CharacteristicWriteRequest *, uint64_t value, void *"
+"HAPUInt64CharacteristicHandleSubscribe","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *, const HAPUInt64CharacteristicSubscriptionRequest *, void *"
+"HAPUInt64CharacteristicHandleUnsubscribe","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *, const HAPUInt64CharacteristicSubscriptionRequest *, void *"
+"HAPIntCharacteristicHandleRead","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPIntCharacteristicReadRequest *, int32_t *value, void *"
+"HAPIntCharacteristicHandleWrite","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPIntCharacteristicWriteRequest *, int32_t value, void *"
+"HAPIntCharacteristicHandleSubscribe","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *, const HAPIntCharacteristicSubscriptionRequest *, void *"
+"HAPIntCharacteristicHandleUnsubscribe","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *, const HAPIntCharacteristicSubscriptionRequest *, void *"
+"HAPFloatCharacteristicHandleRead","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPFloatCharacteristicReadRequest *, float *value, void *"
+"HAPFloatCharacteristicHandleWrite","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPFloatCharacteristicWriteRequest *, float value, void *"
+"HAPFloatCharacteristicHandleSubscribe","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *, const HAPFloatCharacteristicSubscriptionRequest *, void *"
+"HAPFloatCharacteristicHandleUnsubscribe","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *, const HAPFloatCharacteristicSubscriptionRequest *, void *"
+"HAPStringCharacteristicHandleRead","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPStringCharacteristicReadRequest *, char *, size_t, void *"
+"HAPStringCharacteristicHandleWrite","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPStringCharacteristicWriteRequest *, const char *, void *"
+"HAPStringCharacteristicHandleSubscribe","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *, const HAPStringCharacteristicSubscriptionRequest *, void *"
+"HAPStringCharacteristicHandleUnsubscribe","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *, const HAPStringCharacteristicSubscriptionRequest *, void *"
+"HAPTLV8CharacteristicHandleRead","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPTLV8CharacteristicReadRequest *, HAPTLVWriterRef *, void *"
+"HAPTLV8CharacteristicHandleWrite","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPTLV8CharacteristicWriteRequest *, HAPTLVReaderRef *, void *"
+"HAPTLV8CharacteristicHandleSubscribe","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *, const HAPTLV8CharacteristicSubscriptionRequest *, void *"
+"HAPTLV8CharacteristicHandleUnsubscribe","../../apps/netutils/homekit/HomeKitADK/HAP/HAPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *, const HAPTLV8CharacteristicSubscriptionRequest *, void *"
+"HAPDeviceIDGet","../../apps/netutils/homekit/HomeKitADK/HAP/HAPDeviceID.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPPlatformKeyValueStoreRef, HAPDeviceID *"
+"HAPDeviceIDGetAsString","../../apps/netutils/homekit/HomeKitADK/HAP/HAPDeviceID.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPPlatformKeyValueStoreRef, HAPDeviceIDString *"
+"HAPIPByteBufferClear","../../apps/netutils/homekit/HomeKitADK/HAP/HAPIP+ByteBuffer.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPIPByteBuffer *"
+"HAPIPByteBufferFlip","../../apps/netutils/homekit/HomeKitADK/HAP/HAPIP+ByteBuffer.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPIPByteBuffer *"
+"HAPIPByteBufferShiftLeft","../../apps/netutils/homekit/HomeKitADK/HAP/HAPIP+ByteBuffer.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPIPByteBuffer *, size_t"
+"HAPIPByteBufferAppendStringWithFormat","../../apps/netutils/homekit/HomeKitADK/HAP/HAPIP+ByteBuffer.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPIPByteBuffer *, const char *, ..."
+"HAPIPAccessoryCreateSerializationContext","../../apps/netutils/homekit/HomeKitADK/HAP/HAPIPAccessory.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPIPAccessorySerializationContext *"
+"HAPIPAccessorySerializationIsComplete","../../apps/netutils/homekit/HomeKitADK/HAP/HAPIPAccessory.h","defined(CONFIG_NETUTILS_HOMEKIT)","bool","HAPIPAccessorySerializationContext *"
+"HAPIPAccessorySerializeReadResponse","../../apps/netutils/homekit/HomeKitADK/HAP/HAPIPAccessory.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPIPAccessorySerializationContext *, HAPAccessoryServerRef *, HAPIPSessionDescriptorRef *, char *, size_t, size_t, size_t *"
+"HAPIPAccessoryProtocolGetCharacteristicReadRequests","../../apps/netutils/homekit/HomeKitADK/HAP/HAPIPAccessoryProtocol.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","char *, size_t, HAPIPReadContextRef *, size_t, size_t *, HAPIPReadRequestParameters *"
+"HAPIPAccessoryProtocolGetNumCharacteristicReadResponseBytes","../../apps/netutils/homekit/HomeKitADK/HAP/HAPIPAccessoryProtocol.h","defined(CONFIG_NETUTILS_HOMEKIT)","size_t","HAPAccessoryServerRef *, HAPIPReadContextRef *, size_t, HAPIPReadRequestParameters *"
+"HAPIPAccessoryProtocolGetCharacteristicReadResponseBytes","../../apps/netutils/homekit/HomeKitADK/HAP/HAPIPAccessoryProtocol.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, HAPIPReadContextRef *, size_t, HAPIPReadRequestParameters *, HAPIPByteBuffer *"
+"HAPIPAccessoryProtocolGetCharacteristicWriteRequests","../../apps/netutils/homekit/HomeKitADK/HAP/HAPIPAccessoryProtocol.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","char *, size_t, HAPIPWriteContextRef *, size_t, size_t *, bool *hasPID, uint64_t *"
+"HAPIPAccessoryProtocolGetNumCharacteristicWriteResponseBytes","../../apps/netutils/homekit/HomeKitADK/HAP/HAPIPAccessoryProtocol.h","defined(CONFIG_NETUTILS_HOMEKIT)","size_t","HAPAccessoryServerRef *, HAPIPWriteContextRef *, size_t"
+"HAPIPAccessoryProtocolGetCharacteristicWriteResponseBytes","../../apps/netutils/homekit/HomeKitADK/HAP/HAPIPAccessoryProtocol.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, HAPIPWriteContextRef *, size_t, HAPIPByteBuffer *"
+"HAPIPAccessoryProtocolGetNumEventNotificationBytes","../../apps/netutils/homekit/HomeKitADK/HAP/HAPIPAccessoryProtocol.h","defined(CONFIG_NETUTILS_HOMEKIT)","size_t","HAPAccessoryServerRef *, HAPIPReadContextRef *, size_t"
+"HAPIPAccessoryProtocolGetEventNotificationBytes","../../apps/netutils/homekit/HomeKitADK/HAP/HAPIPAccessoryProtocol.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, HAPIPReadContextRef *, size_t, HAPIPByteBuffer *"
+"HAPIPAccessoryProtocolGetCharacteristicWritePreparation","../../apps/netutils/homekit/HomeKitADK/HAP/HAPIPAccessoryProtocol.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","const char *, size_t, uint64_t *, uint64_t *"
+"HAPIPCharacteristicIsSupported","../../apps/netutils/homekit/HomeKitADK/HAP/HAPIPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","bool","const HAPCharacteristic *"
+"HAPCharacteristicGetNumEnabledProperties","../../apps/netutils/homekit/HomeKitADK/HAP/HAPIPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","size_t","const HAPCharacteristic *"
+"HAPCharacteristicGetUnit","../../apps/netutils/homekit/HomeKitADK/HAP/HAPIPCharacteristic.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPCharacteristicUnits","const HAPCharacteristic *"
+"HAPIPSecurityProtocolGetNumEncryptedBytes","../../apps/netutils/homekit/HomeKitADK/HAP/HAPIPSecurityProtocol.h","defined(CONFIG_NETUTILS_HOMEKIT)","size_t","size_t"
+"HAPIPSecurityProtocolEncryptData","../../apps/netutils/homekit/HomeKitADK/HAP/HAPIPSecurityProtocol.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *, HAPSessionRef *, HAPIPByteBuffer *"
+"HAPIPSecurityProtocolDecryptData","../../apps/netutils/homekit/HomeKitADK/HAP/HAPIPSecurityProtocol.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, HAPSessionRef *, HAPIPByteBuffer *"
+"HAPIPServiceDiscoverySetHAPService","../../apps/netutils/homekit/HomeKitADK/HAP/HAPIPServiceDiscovery.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *"
+"HAPIPServiceDiscoverySetMFiConfigService","../../apps/netutils/homekit/HomeKitADK/HAP/HAPIPServiceDiscovery.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *"
+"HAPIPServiceDiscoveryStop","../../apps/netutils/homekit/HomeKitADK/HAP/HAPIPServiceDiscovery.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *"
+"HAPIPSessionAreEventNotificationsEnabled","../../apps/netutils/homekit/HomeKitADK/HAP/HAPIPSession.h","defined(CONFIG_NETUTILS_HOMEKIT)","bool","HAPIPSessionDescriptorRef *, const HAPCharacteristic *, const HAPService *, const HAPAccessory *"
+"HAPIPSessionHandleReadRequest","../../apps/netutils/homekit/HomeKitADK/HAP/HAPIPSession.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPIPSessionDescriptorRef *, HAPIPSessionContext, const HAPCharacteristic *, const HAPService *, const HAPAccessory *, HAPIPSessionReadResult *, HAPIPByteBuffer *"
+"HAPJSONUtilsSkipValue","../../apps/netutils/homekit/HomeKitADK/HAP/HAPJSONUtils.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","struct util_json_reader *, const char *, size_t, size_t *"
+"HAPJSONUtilsGetFloatNumDescriptionBytes","../../apps/netutils/homekit/HomeKitADK/HAP/HAPJSONUtils.h","defined(CONFIG_NETUTILS_HOMEKIT)","size_t","float"
+"HAPJSONUtilsGetFloatDescription","../../apps/netutils/homekit/HomeKitADK/HAP/HAPJSONUtils.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","float, char *, size_t"
+"HAPJSONUtilsGetNumEscapedStringDataBytes","../../apps/netutils/homekit/HomeKitADK/HAP/HAPJSONUtils.h","defined(CONFIG_NETUTILS_HOMEKIT)","size_t","const char *, size_t"
+"HAPJSONUtilsEscapeStringData","../../apps/netutils/homekit/HomeKitADK/HAP/HAPJSONUtils.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","char *, size_t , size_t *"
+"HAPJSONUtilsUnescapeStringData","../../apps/netutils/homekit/HomeKitADK/HAP/HAPJSONUtils.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","char *, size_t *"
+"HAPMFiTokenAuthGetTokenResponse","../../apps/netutils/homekit/HomeKitADK/HAP/HAPMFiTokenAuth.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, HAPSessionRef *, const HAPAccessory *, HAPTLVWriterRef *"
+"HAPMFiTokenAuthHandleTokenUpdateRequest","../../apps/netutils/homekit/HomeKitADK/HAP/HAPMFiTokenAuth.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, HAPSessionRef *, const HAPAccessory *, HAPTLVReaderRef *"
+"HAPPairingReadFlags","../../apps/netutils/homekit/HomeKitADK/HAP/HAPPairing.h","defined(CONFIG_NETUTILS_HOMEKIT)","uint32_t","const HAPTLV *"
+"HAPPairingGetNumBytes","../../apps/netutils/homekit/HomeKitADK/HAP/HAPPairing.h","defined(CONFIG_NETUTILS_HOMEKIT)","size_t","uint32_t"
+"HAPPairingFind","../../apps/netutils/homekit/HomeKitADK/HAP/HAPPairing.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPPlatformKeyValueStoreRef, HAPPairing *, HAPPlatformKeyValueStoreKey *, bool *"
+"HAPPairingPairingsReset","../../apps/netutils/homekit/HomeKitADK/HAP/HAPPairingPairings.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPSessionRef *"
+"HAPPairingPairingsHandleWrite","../../apps/netutils/homekit/HomeKitADK/HAP/HAPPairingPairings.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, HAPSessionRef *, HAPTLVReaderRef *"
+"HAPPairingPairingsHandleRead","../../apps/netutils/homekit/HomeKitADK/HAP/HAPPairingPairings.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, HAPSessionRef *, HAPTLVWriterRef *"
+"HAPPairingPairSetupResetForSession","../../apps/netutils/homekit/HomeKitADK/HAP/HAPPairingPairSetup.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *, HAPSessionRef *"
+"HAPPairingPairSetupHandleWrite","../../apps/netutils/homekit/HomeKitADK/HAP/HAPPairingPairSetup.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, HAPSessionRef *, HAPTLVReaderRef *"
+"HAPPairingPairSetupHandleRead","../../apps/netutils/homekit/HomeKitADK/HAP/HAPPairingPairSetup.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, HAPSessionRef *, HAPTLVWriterRef *"
+"HAPPairingPairVerifyReset","../../apps/netutils/homekit/HomeKitADK/HAP/HAPPairingPairVerify.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPSessionRef *"
+"HAPPairingPairVerifyHandleWrite","../../apps/netutils/homekit/HomeKitADK/HAP/HAPPairingPairVerify.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, HAPSessionRef *, HAPTLVReaderRef *"
+"HAPPairingPairVerifyHandleRead","../../apps/netutils/homekit/HomeKitADK/HAP/HAPPairingPairVerify.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, HAPSessionRef *, HAPTLVWriterRef *"
+"HAPPDUIsValidOpcode","../../apps/netutils/homekit/HomeKitADK/HAP/HAPPDU.h","defined(CONFIG_NETUTILS_HOMEKIT)","bool","uint8_t"
+"HAPHandleServiceSignatureRead","../../apps/netutils/homekit/HomeKitADK/HAP/HAPRequestHandlers.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPDataCharacteristicReadRequest *, void *, size_t , size_t *, void *"
+"HAPHandleNameRead","../../apps/netutils/homekit/HomeKitADK/HAP/HAPRequestHandlers.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPStringCharacteristicReadRequest *, char *, size_t, void *"
+"HAPHandlePairingPairSetupRead","../../apps/netutils/homekit/HomeKitADK/HAP/HAPRequestHandlers.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPTLV8CharacteristicReadRequest *, HAPTLVWriterRef *, void *"
+"HAPHandlePairingPairSetupWrite","../../apps/netutils/homekit/HomeKitADK/HAP/HAPRequestHandlers.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPTLV8CharacteristicWriteRequest *, HAPTLVReaderRef *, void *"
+"HAPHandlePairingPairVerifyRead","../../apps/netutils/homekit/HomeKitADK/HAP/HAPRequestHandlers.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPTLV8CharacteristicReadRequest *, HAPTLVWriterRef *, void *"
+"HAPHandlePairingPairVerifyWrite","../../apps/netutils/homekit/HomeKitADK/HAP/HAPRequestHandlers.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPTLV8CharacteristicWriteRequest *, HAPTLVReaderRef *, void *"
+"HAPHandlePairingPairingFeaturesRead","../../apps/netutils/homekit/HomeKitADK/HAP/HAPRequestHandlers.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPUInt8CharacteristicReadRequest *, uint8_t *, void *"
+"HAPHandlePairingPairingPairingsRead","../../apps/netutils/homekit/HomeKitADK/HAP/HAPRequestHandlers.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPTLV8CharacteristicReadRequest *, HAPTLVWriterRef *, void *"
+"HAPHandlePairingPairingPairingsWrite","../../apps/netutils/homekit/HomeKitADK/HAP/HAPRequestHandlers.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPTLV8CharacteristicWriteRequest *, HAPTLVReaderRef *, void *"
+"HAPHandleAccessoryInformationIdentifyWrite","../../apps/netutils/homekit/HomeKitADK/HAP/HAPRequestHandlers+AccessoryInformation.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPBoolCharacteristicWriteRequest *, bool, void *"
+"HAPHandleAccessoryInformationManufacturerRead","../../apps/netutils/homekit/HomeKitADK/HAP/HAPRequestHandlers+AccessoryInformation.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPStringCharacteristicReadRequest *, char *, size_t, void *"
+"HAPHandleAccessoryInformationModelRead","../../apps/netutils/homekit/HomeKitADK/HAP/HAPRequestHandlers+AccessoryInformation.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPStringCharacteristicReadRequest *, char *, size_t, void *"
+"HAPHandleAccessoryInformationNameRead","../../apps/netutils/homekit/HomeKitADK/HAP/HAPRequestHandlers+AccessoryInformation.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPStringCharacteristicReadRequest *, char *, size_t, void *"
+"HAPHandleAccessoryInformationSerialNumberRead","../../apps/netutils/homekit/HomeKitADK/HAP/HAPRequestHandlers+AccessoryInformation.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPStringCharacteristicReadRequest *, char *, size_t, void *"
+"HAPHandleAccessoryInformationFirmwareRevisionRead","../../apps/netutils/homekit/HomeKitADK/HAP/HAPRequestHandlers+AccessoryInformation.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPStringCharacteristicReadRequest *, char *, size_t, void *"
+"HAPHandleAccessoryInformationHardwareRevisionRead","../../apps/netutils/homekit/HomeKitADK/HAP/HAPRequestHandlers+AccessoryInformation.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPStringCharacteristicReadRequest *, char *, size_t, void *"
+"HAPHandleAccessoryInformationADKVersionRead","../../apps/netutils/homekit/HomeKitADK/HAP/HAPRequestHandlers+AccessoryInformation.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPStringCharacteristicReadRequest *, char *, size_t, void *"
+"HAPHandleHAPProtocolInformationVersionRead","../../apps/netutils/homekit/HomeKitADK/HAP/HAPRequestHandlers+HAPProtocolInformation.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPStringCharacteristicReadRequest *, char *, size_t, void *"
+"HAPHandlePairingPairSetupRead","../../apps/netutils/homekit/HomeKitADK/HAP/HAPRequestHandlers+Pairing.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPTLV8CharacteristicReadRequest *, HAPTLVWriterRef *, void *"
+"HAPHandlePairingPairSetupWrite","../../apps/netutils/homekit/HomeKitADK/HAP/HAPRequestHandlers+Pairing.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPTLV8CharacteristicWriteRequest *, HAPTLVReaderRef *, void *"
+"HAPHandlePairingPairVerifyRead","../../apps/netutils/homekit/HomeKitADK/HAP/HAPRequestHandlers+Pairing.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPTLV8CharacteristicReadRequest *, HAPTLVWriterRef *, void *"
+"HAPHandlePairingPairVerifyWrite","../../apps/netutils/homekit/HomeKitADK/HAP/HAPRequestHandlers+Pairing.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPTLV8CharacteristicWriteRequest *, HAPTLVReaderRef * void *"
+"HAPHandlePairingPairingFeaturesRead","../../apps/netutils/homekit/HomeKitADK/HAP/HAPRequestHandlers+Pairing.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPUInt8CharacteristicReadRequest *, uint8_t *, void *"
+"HAPHandlePairingPairingPairingsRead","../../apps/netutils/homekit/HomeKitADK/HAP/HAPRequestHandlers+Pairing.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPTLV8CharacteristicReadRequest *, HAPTLVWriterRef *, void *"
+"HAPHandlePairingPairingPairingsWrite","../../apps/netutils/homekit/HomeKitADK/HAP/HAPRequestHandlers+Pairing.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, const HAPTLV8CharacteristicWriteRequest *, HAPTLVReaderRef *, void *"
+"HAPSessionCreate","../../apps/netutils/homekit/HomeKitADK/HAP/HAPSession.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *, HAPSessionRef *, HAPTransportType"
+"HAPSessionRelease","../../apps/netutils/homekit/HomeKitADK/HAP/HAPSession.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *, HAPSessionRef *"
+"HAPSessionInvalidate","../../apps/netutils/homekit/HomeKitADK/HAP/HAPSession.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPAccessoryServerRef *, HAPSessionRef *, bool"
+"HAPSessionIsSecured","../../apps/netutils/homekit/HomeKitADK/HAP/HAPSession.h","defined(CONFIG_NETUTILS_HOMEKIT)","bool","const HAPSessionRef *"
+"HAPSessionIsTransient","../../apps/netutils/homekit/HomeKitADK/HAP/HAPSession.h","defined(CONFIG_NETUTILS_HOMEKIT)","bool","const HAPSessionRef *"
+"HAPSessionControllerIsAdmin","../../apps/netutils/homekit/HomeKitADK/HAP/HAPSession.h","defined(CONFIG_NETUTILS_HOMEKIT)","bool","const HAPSessionRef *"
+"HAPSessionHandlePairSetupWrite","../../apps/netutils/homekit/HomeKitADK/HAP/HAPSession.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, HAPSessionRef *, HAPTLVReaderRef *"
+"HAPSessionHandlePairSetupRead","../../apps/netutils/homekit/HomeKitADK/HAP/HAPSession.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, HAPSessionRef *, HAPTLVWriterRef *"
+"HAPSessionHandlePairVerifyWrite","../../apps/netutils/homekit/HomeKitADK/HAP/HAPSession.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, HAPSessionRef *, HAPTLVReaderRef *"
+"HAPSessionHandlePairVerifyRead","../../apps/netutils/homekit/HomeKitADK/HAP/HAPSession.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, HAPSessionRef *, HAPTLVWriterRef *"
+"HAPSessionHandlePairingsWrite","../../apps/netutils/homekit/HomeKitADK/HAP/HAPSession.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, HAPSessionRef *, HAPTLVReaderRef *"
+"HAPSessionHandlePairingsRead","../../apps/netutils/homekit/HomeKitADK/HAP/HAPAccessory+Info.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPAccessoryServerRef *, HAPSessionRef *, HAPTLVWriterRef *"
+"HAPSessionEncryptControlMessage","../../apps/netutils/homekit/HomeKitADK/HAP/HAPSession.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","const HAPAccessoryServerRef *, HAPSessionRef *, void *, const void *, size_t"
+"HAPSessionEncryptControlMessageWithAAD","../../apps/netutils/homekit/HomeKitADK/HAP/HAPSession.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","const HAPAccessoryServerRef *, HAPSessionRef *, void *, const void *, size_t, const void *, size_t"
+"HAPSessionDecryptControlMessage","../../apps/netutils/homekit/HomeKitADK/HAP/HAPSession.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","const HAPAccessoryServerRef *, HAPSessionRef *, void *, const void *, size_t"
+"HAPSessionDecryptControlMessageWithAAD","../../apps/netutils/homekit/HomeKitADK/HAP/HAPSession.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","const HAPAccessoryServerRef *, HAPSessionRef *, void *, const void *, size_t, const void *, size_t"
+"HAPStringBuilderCreate","../../apps/netutils/homekit/HomeKitADK/HAP/HAPStringBuilder.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPStringBuilderRef *, char *, size_t"
+"HAPStringBuilderDidOverflow","../../apps/netutils/homekit/HomeKitADK/HAP/HAPStringBuilder.h","defined(CONFIG_NETUTILS_HOMEKIT)","bool","HAPStringBuilderRef *"
+"HAPStringBuilderGetString","../../apps/netutils/homekit/HomeKitADK/HAP/HAPStringBuilder.h","defined(CONFIG_NETUTILS_HOMEKIT)","const char *","HAPStringBuilderRef *"
+"HAPStringBuilderGetNumBytes","../../apps/netutils/homekit/HomeKitADK/HAP/HAPStringBuilder.h","defined(CONFIG_NETUTILS_HOMEKIT)","size_","HAPStringBuilderRef *"
+"HAPStringBuilderAppend","../../apps/netutils/homekit/HomeKitADK/HAP/HAPStringBuilder.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPStringBuilderRef *, const char *, ..."
+"HAPStringBuilderAppendWithArguments","../../apps/netutils/homekit/HomeKitADK/HAP/HAPStringBuilder.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPStringBuilderRef *, const char *, va_list"
+"HAPTLVFormatUsesType","../../apps/netutils/homekit/HomeKitADK/HAP/HAPTLV+Internal.h","defined(CONFIG_NETUTILS_HOMEKIT)","bool","const HAPTLVFormat *, HAPTLVType"
+"HAPTLVFormatHaveConflictingTypes","../../apps/netutils/homekit/HomeKitADK/HAP/HAPTLV+Internal.h","defined(CONFIG_NETUTILS_HOMEKIT)","bool","const HAPTLVFormat *, const HAPTLVFormat *"
+"HAPTLVFormatIsValid","../../apps/netutils/homekit/HomeKitADK/HAP/HAPTLV+Internal.h","defined(CONFIG_NETUTILS_HOMEKIT)","bool","const HAPTLVFormat *"
+"HAPTLVAppendToLog","../../apps/netutils/homekit/HomeKitADK/HAP/HAPTLV+Internal.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPTLVType, const char *, const HAPTLVFormat *, HAPTLVValue *, HAPStringBuilderRef *, size_t"
+"HAPUUIDIsAppleDefined","../../apps/netutils/homekit/HomeKitADK/HAP/HAPUUID.h","defined(CONFIG_NETUTILS_HOMEKIT)","bool","const HAPUUID *"
+"HAPUUIDGetNumDescriptionBytes","../../apps/netutils/homekit/HomeKitADK/HAP/HAPUUID.h","defined(CONFIG_NETUTILS_HOMEKIT)","size_t","const HAPUUID *"
+"HAPUUIDGetDescription","../../apps/netutils/homekit/HomeKitADK/HAP/HAPUUID.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","const HAPUUID *, char *, size_t"
+"HAPUUIDGetShortFormBytes","../../apps/netutils/homekit/HomeKitADK/HAP/HAPUUID.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","const HAPUUID *, void *, size_t, size_t *"
+"HAPAssertAbortInternal","../../apps/netutils/homekit/HomeKitADK/PAL/HAPAssert.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","void"
+"HAPAssertInternal","../../apps/netutils/homekit/HomeKitADK/PAL/HAPAssert.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","const char *, const char *, int"
+"HAPAssertionFailureInternal","../../apps/netutils/homekit/HomeKitADK/PAL/HAPAssert.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","const char *, const char *, int"
+"HAPPreconditionInternal","../../apps/netutils/homekit/HomeKitADK/PAL/HAPAssert.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","const char *, const char *"
+"HAPPreconditionFailureInternal","../../apps/netutils/homekit/HomeKitADK/PAL/HAPAssert.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","const char *"
+"HAPFatalErrorInternal","../../apps/netutils/homekit/HomeKitADK/PAL/HAPAssert.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","const char *, const char *, int"
+"HAPRawBufferZero","../../apps/netutils/homekit/HomeKitADK/PAL/HAPBase.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","void *, size_t"
+"HAPRawBufferCopyBytes","../../apps/netutils/homekit/HomeKitADK/PAL/HAPBase.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","void *, const void *, size_t"
+"HAPRawBufferAreEqual","../../apps/netutils/homekit/HomeKitADK/PAL/HAPBase.h","defined(CONFIG_NETUTILS_HOMEKIT)","bool","const void *, const void *, size_t"
+"HAPRawBufferIsZero","../../apps/netutils/homekit/HomeKitADK/PAL/HAPBase.h","defined(CONFIG_NETUTILS_HOMEKIT)","bool","const void *, size_t"
+"HAPInt32GetNumDescriptionBytes","../../apps/netutils/homekit/HomeKitADK/PAL/HAPBase.h","defined(CONFIG_NETUTILS_HOMEKIT)","size_t","int32_t"
+"HAPUInt64GetNumDescriptionBytes","../../apps/netutils/homekit/HomeKitADK/PAL/HAPBase.h","defined(CONFIG_NETUTILS_HOMEKIT)","size_t","uint64_t"
+"HAPUInt64GetDescription","../../apps/netutils/homekit/HomeKitADK/PAL/HAPBase.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","uint64_t, char *, size_t"
+"HAPUInt64GetHexDescription","../../apps/netutils/homekit/HomeKitADK/PAL/HAPBase.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","uint64_t, char *, size_t, HAPLetterCase"
+"HAPUInt64FromString","../../apps/netutils/homekit/HomeKitADK/PAL/HAPBase.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","const char *, uint64_t *"
+"HAPInt64FromString","../../apps/netutils/homekit/HomeKitADK/PAL/HAPBase.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","const char *, int64_t *"
+"HAPFloatFromBitPattern","../../apps/netutils/homekit/HomeKitADK/PAL/HAPBase.h","defined(CONFIG_NETUTILS_HOMEKIT)","float","uint32_t"
+"HAPFloatGetBitPattern","../../apps/netutils/homekit/HomeKitADK/PAL/HAPBase.h","defined(CONFIG_NETUTILS_HOMEKIT)","uint32_t","float"
+"HAPFloatFromString","../../apps/netutils/homekit/HomeKitADK/PAL/HAPBase.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","const char *, float *"
+"HAPFloatGetDescription","../../apps/netutils/homekit/HomeKitADK/PAL/HAPBase.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","char *, size_t, float"
+"HAPFloatGetAbsoluteValue","../../apps/netutils/homekit/HomeKitADK/PAL/HAPBase.h","defined(CONFIG_NETUTILS_HOMEKIT)","float","float"
+"HAPFloatGetFraction","../../apps/netutils/homekit/HomeKitADK/PAL/HAPBase.h","defined(CONFIG_NETUTILS_HOMEKIT)","float","float"
+"HAPFloatIsZero","../../apps/netutils/homekit/HomeKitADK/PAL/HAPBase.h","defined(CONFIG_NETUTILS_HOMEKIT)","bool","float"
+"HAPFloatIsFinite","../../apps/netutils/homekit/HomeKitADK/PAL/HAPBase.h","defined(CONFIG_NETUTILS_HOMEKIT)","bool","float"
+"HAPFloatIsInfinite","../../apps/netutils/homekit/HomeKitADK/PAL/HAPBase.h","defined(CONFIG_NETUTILS_HOMEKIT)","bool","float"
+"HAPDoubleFromBitPattern","../../apps/netutils/homekit/HomeKitADK/PAL/HAPBase.h","defined(CONFIG_NETUTILS_HOMEKIT)","double","uint64_t"
+"HAPDoubleGetBitPattern","../../apps/netutils/homekit/HomeKitADK/PAL/HAPBase.h","defined(CONFIG_NETUTILS_HOMEKIT)","uint64_t","double"
+"HAPStringWithFormat","../../apps/netutils/homekit/HomeKitADK/PAL/HAPBase.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","char *, size_t, const char *, ..."
+"HAPStringWithFormatAndArguments","../../apps/netutils/homekit/HomeKitADK/PAL/HAPBase.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","char *, size_t, const char *, va_list"
+"HAPStringGetNumBytes","../../apps/netutils/homekit/HomeKitADK/PAL/HAPBase.h","defined(CONFIG_NETUTILS_HOMEKIT)","size_t","const char *"
+"HAPStringAreEqual","../../apps/netutils/homekit/HomeKitADK/PAL/HAPBase.h","defined(CONFIG_NETUTILS_HOMEKIT)","bool","const char *, const char *"
+"HAPUTF8IsValidData","../../apps/netutils/homekit/HomeKitADK/PAL/HAPBase.h","defined(CONFIG_NETUTILS_HOMEKIT)","bool","const void *, size_t"
+"HAPSHA1Checksum","../../apps/netutils/homekit/HomeKitADK/PAL/HAPBase.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","uint8_t [], const void *, size_t"
+"HAPLogBufferInternal","../../apps/netutils/homekit/HomeKitADK/PAL/HAPLog.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","const HAPLogObject *, const void *, size_t, const char *, ..."
+"HAPLogBufferInfoInternal","../../apps/netutils/homekit/HomeKitADK/PAL/HAPLog.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","const HAPLogObject *, const void *, size_t, const char *, ..."
+"HAPLogBufferDebugInternal","../../apps/netutils/homekit/HomeKitADK/PAL/HAPLog.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","const HAPLogObject *, const void *, size_t, const char *, ..."
+"HAPLogBufferErrorInternal","../../apps/netutils/homekit/HomeKitADK/PAL/HAPLog.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","const HAPLogObject *, const void *, size_t, const char *, ..."
+"HAPLogBufferFaultInternal","../../apps/netutils/homekit/HomeKitADK/PAL/HAPLog.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","const HAPLogObject *, const void *, size_t, const char *, ..."
+"HAPLogInternal","../../apps/netutils/homekit/HomeKitADK/PAL/HAPLog.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","const HAPLogObject *, const char *, ..."
+"HAPLogInfoInternal","../../apps/netutils/homekit/HomeKitADK/PAL/HAPLog.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","const HAPLogObject *, const char *, ..."
+"HAPLogDebugInternal","../../apps/netutils/homekit/HomeKitADK/PAL/HAPLog.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","const HAPLogObject *, const char *, ..."
+"HAPLogErrorInternal","../../apps/netutils/homekit/HomeKitADK/PAL/HAPLog.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","const HAPLogObject *, const char *, ..."
+"HAPLogFaultInternal","../../apps/netutils/homekit/HomeKitADK/PAL/HAPLog.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","const HAPLogObject *, const char *, ..."
+"HAPPlatformGetCompatibilityVersion","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","uint32_t","void"
+"HAPPlatformGetIdentification","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","const char *","void"
+"HAPPlatformGetVersion","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","const char *","void"
+"HAPPlatformGetBuild","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","const char *","void"
+"HAPPlatformAbort","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","void"
+"HAPPlatformAccessorySetupLoadSetupInfo","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPPlatformAccessorySetupRef, HAPSetupInfo *"
+"HAPPlatformAccessorySetupLoadSetupCode","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPPlatformAccessorySetupRef, HAPSetupCode *"
+"HAPPlatformAccessorySetupLoadSetupID","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPPlatformAccessorySetupRef accessorySetup, bool *, HAPSetupID *"
+"HAPPlatformAccessorySetupDisplayUpdateSetupPayload","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPPlatformAccessorySetupDisplayRef, const HAPSetupPayload *, const HAPSetupCode *"
+"HAPPlatformAccessorySetupDisplayHandleStartPairing","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPPlatformAccessorySetupDisplayRef"
+"HAPPlatformAccessorySetupDisplayHandleStopPairing","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPPlatformAccessorySetupDisplayRef"
+"HAPPlatformAccessorySetupNFCUpdateSetupPayload","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPPlatformAccessorySetupNFCRef, const HAPSetupPayload *, bool"
+"HAPPlatformClockGetCurrent","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPTime","void"
+"HAPPlatformKeyValueStoreGet","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPPlatformKeyValueStoreRef, HAPPlatformKeyValueStoreDomain, HAPPlatformKeyValueStoreKey, void *, size_t, size_t *, bool *"
+"HAPPlatformKeyValueStoreSet","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPPlatformKeyValueStoreRef, HAPPlatformKeyValueStoreDomain, HAPPlatformKeyValueStoreKey, const void *, size_t"
+"HAPPlatformKeyValueStoreRemove","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPPlatformKeyValueStoreRef, HAPPlatformKeyValueStoreDomain, HAPPlatformKeyValueStoreKey"
+"HAPPlatformKeyValueStoreEnumerate","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPPlatformKeyValueStoreRef, HAPPlatformKeyValueStoreDomain, HAPPlatformKeyValueStoreEnumerateCallback, void *"
+"HAPPlatformKeyValueStorePurgeDomain","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPPlatformKeyValueStoreRef, HAPPlatformKeyValueStoreDomain"
+"HAPPlatformLogGetEnabledTypes","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPPlatformLogEnabledTypes","const HAPLogObject *"
+"HAPPlatformLogCapture","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","const HAPLogObject *, HAPLogType, const char *, const void *, size_t"
+"HAPPlatformMFiHWAuthIsPoweredOn","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","bool","HAPPlatformMFiHWAuthRef"
+"HAPPlatformMFiHWAuthPowerOn","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPPlatformMFiHWAuthRef"
+"HAPPlatformMFiHWAuthPowerOff","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPPlatformMFiHWAuthRef"
+"HAPPlatformMFiHWAuthWrite","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPPlatformMFiHWAuthRef, const void *, size_t"
+"HAPPlatformMFiHWAuthRead","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPPlatformMFiHWAuthRef, uint8_t, void *, size_t"
+"HAPPlatformMFiTokenAuthLoad","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPPlatformMFiTokenAuthRef, bool *, HAPPlatformMFiTokenAuthUUID *, void *, size_t, size_t *"
+"HAPPlatformMFiTokenAuthUpdate","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPPlatformMFiTokenAuthRef, const void *, size_t"
+"HAPPlatformRandomNumberFill","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","void *, size_t"
+"HAPPlatformRunLoopRun","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","void"
+"HAPPlatformRunLoopStop","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","void"
+"HAPPlatformRunLoopScheduleCallback","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPPlatformRunLoopCallback, void *, size_t"
+"HAPPlatformServiceDiscoveryRegister","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPPlatformServiceDiscoveryRef, const char *, const char *, HAPNetworkPort, HAPPlatformServiceDiscoveryTXTRecord *, size_t"
+"HAPPlatformServiceDiscoveryStop","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPPlatformServiceDiscoveryRef"
+"HAPPlatformTCPStreamManagerGetListenerPort","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPNetworkPort","HAPPlatformTCPStreamManagerRef"
+"HAPPlatformTCPStreamManagerIsListenerOpen","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","bool","HAPPlatformTCPStreamManagerRef"
+"HAPPlatformTCPStreamManagerOpenListener","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPPlatformTCPStreamManagerRef, HAPPlatformTCPStreamListenerCallback, void *"
+"HAPPlatformTCPStreamManagerCloseListener","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPPlatformTCPStreamManagerRef"
+"HAPPlatformTCPStreamManagerAcceptTCPStream","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPPlatformTCPStreamManagerRef, HAPPlatformTCPStreamRef *"
+"HAPPlatformTCPStreamCloseOutput","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPPlatformTCPStreamManagerRef, HAPPlatformTCPStreamRef"
+"HAPPlatformTCPStreamClose","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPPlatformTCPStreamManagerRef, HAPPlatformTCPStreamRef"
+"HAPPlatformTCPStreamUpdateInterests","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPPlatformTCPStreamManagerRef, HAPPlatformTCPStreamRef, HAPPlatformTCPStreamEvent, HAPPlatformTCPStreamEventCallback, void *"
+"HAPPlatformTCPStreamRead","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPPlatformTCPStreamManagerRef, HAPPlatformTCPStreamRef, void *, size_t, size_t *"
+"HAPPlatformTCPStreamWrite","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPPlatformTCPStreamManagerRef, HAPPlatformTCPStreamRef, const void *, size_t, size_t *"
+"HAPPlatformTimerRegister","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPPlatformTimerRef *, HAPTime, HAPPlatformTimerCallback, void *"
+"HAPPlatformTimerDeregister","../../apps/netutils/homekit/HomeKitADK/PAL/HAPPlatform.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPPlatformTimerRef"
+"HAPPlatformAccessorySetupCreate","../../apps/netutils/homekit/HomeKitADK/PAL/POSIX/HAPPlatformAccessorySetup+Init.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPPlatformAccessorySetupRef, const HAPPlatformAccessorySetupOptions *"
+"HAPPlatformAccessorySetupDisplayCreate","../../apps/netutils/homekit/HomeKitADK/PAL/POSIX/HAPPlatformAccessorySetupDisplay+Init.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPPlatformAccessorySetupDisplayRef"
+"HAPPlatformFileHandleRegister","../../apps/netutils/homekit/HomeKitADK/PAL/POSIX/HAPPlatformFileHandle.h","defined(CONFIG_NETUTILS_HOMEKIT)","HAPError","HAPPlatformFileHandleRef *, int, HAPPlatformFileHandleEvent, HAPPlatformFileHandleCallback, void *"
+"HAPPlatformFileHandleUpdateInterests","../../apps/netutils/homekit/HomeKitADK/PAL/POSIX/HAPPlatformFileHandle.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPPlatformFileHandleRef, HAPPlatformFileHandleEvent, HAPPlatformFileHandleCallback, void *"
+"HAPPlatformFileHandleDeregister","../../apps/netutils/homekit/HomeKitADK/PAL/POSIX/HAPPlatformFileHandle.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPPlatformFileHandleRef"
+"HAPPlatformKeyValueStoreCreate","../../apps/netutils/homekit/HomeKitADK/PAL/POSIX/HAPPlatformKeyValueStore+Init.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","CONFIG_NETUTILS_HOMEKIT)","void","HAPPlatformKeyValueStoreRef, const HAPPlatformKeyValueStoreOptions *"
+"HAPPlatformLogPOSIXError","../../apps/netutils/homekit/HomeKitADK/PAL/POSIX/HAPPlatformLog+Init.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPLogType, const char *, int, const char *, const char *, int"
+"HAPPlatformMFiTokenAuthCreate","../../apps/netutils/homekit/HomeKitADK/PAL/POSIX/HAPPlatformMFiTokenAuth+Init.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPPlatformMFiTokenAuthRef, const HAPPlatformMFiTokenAuthOptions *"
+"HAPPlatformMFiTokenAuthIsProvisioned","../../apps/netutils/homekit/HomeKitADK/PAL/POSIX/HAPPlatformMFiTokenAuth+Init.h","defined(CONFIG_NETUTILS_HOMEKIT)","bool","HAPPlatformMFiTokenAuthRef"
+"HAPPlatformRunLoopCreate","../../apps/netutils/homekit/HomeKitADK/PAL/POSIX/HAPPlatformRunLoop+Init.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","const HAPPlatformRunLoopOptions *"
+"HAPPlatformRunLoopRelease","../../apps/netutils/homekit/HomeKitADK/PAL/POSIX/HAPPlatformRunLoop+Init.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","void"
+"HAPPlatformServiceDiscoveryCreate","../../apps/netutils/homekit/HomeKitADK/PAL/POSIX/HAPPlatformServiceDiscovery+Init.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPPlatformServiceDiscoveryRef, const HAPPlatformServiceDiscoveryOptions *"
+"HAPPlatformTCPStreamManagerCreate","../../apps/netutils/homekit/HomeKitADK/PAL/POSIX/HAPPlatformTCPStreamManager+Init.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPPlatformTCPStreamManagerRef, const HAPPlatformTCPStreamManagerOptions *"
+"HAPPlatformTCPStreamManagerRelease","../../apps/netutils/homekit/HomeKitADK/PAL/POSIX/HAPPlatformTCPStreamManager+Init.h","defined(CONFIG_NETUTILS_HOMEKIT)","void","HAPPlatformTCPStreamManagerRef"
diff --git a/tools/mksymtab.c b/tools/mksymtab.c
index 0c54f4b275..2c2c9404a0 100644
--- a/tools/mksymtab.c
+++ b/tools/mksymtab.c
@@ -130,6 +130,7 @@ int main(int argc, char **argv, char **envp)
   char *finalterm;
   char *ptr;
   bool cond;
+  bool parm1;
   FILE *instream;
   FILE *outstream;
   int ch;
@@ -268,6 +269,12 @@ int main(int argc, char **argv, char **envp)
     {
       /* Parse the line from the CVS file */
 
+      g_parm[NAME_INDEX][0] = 0;
+      g_parm[HEADER_INDEX][0] = 0;
+      g_parm[COND_INDEX][0] = 0;
+      g_parm[RETTYPE_INDEX][0] = 0;
+      g_parm[PARM1_INDEX][0] = 0;
+
       int nargs = parse_csvline(ptr);
       if (nargs < PARM1_INDEX)
         {
@@ -286,8 +293,17 @@ int main(int argc, char **argv, char **envp)
 
       /* Output the symbol table entry */
 
-      fprintf(outstream, "%s  { \"%s\", (FAR const void *)%s }",
-              nextterm, g_parm[NAME_INDEX], g_parm[NAME_INDEX]);
+      parm1 = strlen(g_parm[PARM1_INDEX]) > 0;
+      if (parm1)
+        {
+          fprintf(outstream, "%s  { \"%s\", (FAR const void *)%s }",
+                  nextterm, g_parm[NAME_INDEX], g_parm[NAME_INDEX]);
+        }
+      else
+        {
+          fprintf(outstream, "%s  { \"%s\", (FAR const void *)&%s }",
+                  nextterm, g_parm[NAME_INDEX], g_parm[NAME_INDEX]);
+        }
 
       if (cond)
         {
